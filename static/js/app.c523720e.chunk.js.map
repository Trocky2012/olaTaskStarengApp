{"version":3,"sources":["src/services/api.js","src/Pages/PostsPage/Posts/PostServices/postApi.js","src/Pages/PostsPage/Posts/Tasks/index.js","src/Pages/PostsPage/Posts/index.js","src/Pages/PostsPage/PostsByUser/PostServices/postApi.js","src/Pages/PostsPage/PostsByUser/Tasks/index.js","src/Pages/PostsPage/PostsByUser/index.js","src/Pages/PostsPage/PostsByAssigned/PostServices/postApi.js","src/Pages/PostsPage/PostsByAssigned/Tasks/index.js","src/Pages/PostsPage/PostsByAssigned/index.js","App.js"],"names":["api","axios","create","baseURL","postApi","Tasks","props","state","tasksOfThePost","details","specificPostModal","this","setState","data","title","id","description","update_time","status","View","style","styles","card","borderBottomWidth","borderColor","marginBottom","flexDirection","justifyContent","alignItems","Text","titulo","onPress","setOpenCloseTask","backgroundColor","color","fontWeight","borderRadius","fontSize","padding","marginRight","flex","marginTop","texto","Component","StyleSheet","width","Dimensions","get","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","marginLeft","capa","zIndex","Areabotao","botao","opacity","borderTopLeftRadius","borderBottomLeftRadius","botaoVoltarALista","borderWidth","botaoTexto","textAlign","Posts","specificPost","loadMyPosts","assignUser","postId","assignedUserId","visibility","getPost","toString","response","loading","getTasksOfPost","responsetasks","responseAssignedUser","userId","Alert","alert","text","assignUserToPost","cancelable","path","put","error","console","log","type","date","user_name","ActivityIndicator","size","ScrollView","Modal","animationType","visible","paddingTop","TouchableOpacity","fcnSpecificPost","botaoAssign","askToAssignUserToPost","margin","botaoAssigned","AreaCreatedByUserIsideAPost","botaoCreatedByUserIsideAPost","botaoTextoCreatedByUser","botaoCreatedByUserIsideAPost2","firstName","lastName","paddingLeft","paddingRight","paddingBottom","alignSelf","format","Date","borderTopRightRadius","length","FlatList","keyExtractor","item","renderItem","AreaCreatedByUser","botaoCreatedByUser","transparent","borderBottomRightRadius","hideTask","loadingToDeleteTask","executeFunctionToDeleteCard","delete","comments","setTaskStatus","askToDeleteThisTaskAndHideCard","taskTitle","taskDescription","PostsByUser","openEditModal","closeTaskBool","postTitle","postDescription","postType","postStatus","postDate","taskTitleWriting","taskDescriptionWriting","taskPosition","setPostTitle","bind","setPostDescription","setPostType","setPostStatus","setPostDate","setTaskTitleWriting","setTaskDescriptionWriting","setTaskPosition","showAllSubTasks","i","pop","executePostToNextStatus","OpenEditModal","push","finalNewText","SavePostChanges","fcnEditModal","newData","updatePostPath","numberOfTasksInit","numberOfTasksend","newTaskData","post","fcnCheckOptions","botaoSubmitEditSmallred","botaoSubmitEditSmallblue","fcnSavePostChanges","TextInput","inputsMyTasksTitle","placeholder","placeholderTextColor","underlineColorAndroid","value","onChangeText","keyboardType","multiline","selectedValue","onValueChange","itemValue","itemIndex","Item","label","inputsMyTasksBigger","returnKeyType","blurOnSubmit","onSubmitEditing","Keyboard","dismiss","KeyboardAvoidingView","behavior","inputsMyTasks","inputDecriptionInNewSubTask","focus","inputsMyTasksMiddle","ref","input","saveTaskTitleAndDescription","botaoMyPostSaveTasks","botaoTextoMyPostSaveTasks","showListOfSavedTasks","borderRightWidth","borderRightColor","map","key","askToPUTPostToNextStatus","inputOfEditPost","alignContent","lastButtomCancelArea","borderTopColor","borderTopWidth","botaoSubmitEdit","botaoCancelaEdit","statusArray","handleRefreshing","seed","placeOfStatus","setPlaceOfStatus","modalToFinishsubTask","inputDecriptionToFinishTask","showCommentsFromApi","setInputDecriptionToFinishTask","number","executeGoToNextStatus","start_time","urlPhoto","askToGoToNextStatus","userName","PostsByAssigned","user","StrStatus","StrType","App","fcnEntryModalCheckAndClose","handleRefreshingForMyTasks","fcnMyOwnPostsModal","handleRefreshingForAssigned","fcnAssignedPostsModal","posts","postsByUser","entryModal","newLoginModal","myPostsModal","subTasksModal","MyOwnPosted","assignedPostsModal","showOptionsForMyTask","email","password","postAssignedUser","newLoginFirstName","newLoginLastName","newLoginEmail","newLoginPassword","newLoginPassword2","newLoginPhone","createdPostID","userID","userProjectId","setEmail","setPassword","setPostAssignedUser","setNewLoginFirstName","setNewLoginLastName","setNewLoginEmail","setNewLoginPassword","setNewLoginPassword2","setNewLoginPhone","setCreatedPostID","setUserID","includes","TextForRerquest","setUserName","setUserProjectId","projectId","password2","responseOfCheckEmail","CreateNewLogin","newUserData","variable","typeChanging","onlyUserId","fcnMyOwnPosted","fcnAssignedPosts","Linking","openURL","userEmailToAssign","createNewPost","userToAssignId","apiResponse","createNewTasksForAPost","fcnGetFilteredPostsByAssignedUser","container","inputsEntry","autoCapitalize","inputEntryPassword","secureTextEntry","botaoEntry","fcnNewLoginModal","fcnAskToGoToStarengWebsite","inputsNewLogin","inputNewLastName","inputNewEmail","inputNewPassword","inputNewPassword2","fcnNewLoginModalCheckAndClose","borderBottomColor","inputDecriptionInNewPost","inputAssignToSomeone","botaoMyPostBack","fcnMyPostModal","botaoTextoMyPostBack","fcnCreatePostAndOpenSubTasksModal","botaoSubmit","fcnCreatetasksForPostAndCloseAllModals","botaoTextoMyPostSave","smallTop","textSmallTop","fcnGetPostByStatus","fcnGetPostByType","botaoEmpty","refreshing","onRefresh","contentContainerStyle","fcnEntryModal","smallTop2","textSmallTop2","textInput","botaoMyPostSave"],"mappings":"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","file":"static/js/app.c523720e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//https://sujeitoprogramador.com/r-api/?api=filmes\r\n\r\nconst api = axios.create({\r\n  // baseURL: 'http://localhost:8080/'\r\n  // baseURL: 'http://192.168.0.111:8080/'\r\n  // baseURL: 'http://192.168.0.23:8080/'\r\n  // baseURL: 'https://crud-stareng.herokuapp.com/'\r\n\r\n  //baseURL: 'http://192.168.1.11:8080/'\r\n  \r\n  //baseURL: 'https://ola-task.herokuapp.com/'\r\n\r\n  baseURL: 'https://timing-control.herokuapp.com/'\r\n  \r\n});\r\n\r\nexport default api;","import axios from 'axios';\r\n\r\n//https://sujeitoprogramador.com/r-api/?api=filmes\r\n\r\nconst postApi = axios.create({\r\n  // baseURL: 'http://localhost:8080/'\r\n  // baseURL: 'http://192.168.0.111:8080/'\r\n  // baseURL: 'http://192.168.0.23:8080/'\r\n  // baseURL: 'https://crud-stareng.herokuapp.com/'\r\n\r\n  //baseURL: 'http://192.168.1.11:8080/'\r\n  \r\n  //baseURL: 'https://ola-task.herokuapp.com/'\r\n\r\n  baseURL: 'https://timing-control.herokuapp.com/'\r\n  \r\n});\r\n\r\nexport default postApi;","import React, {Component} from 'react';\r\nimport {View, Text, StyleSheet, Image, FlatList, TouchableOpacity, ActivityIndicator, Modal, Dimensions} from 'react-native';\r\n\r\nclass Tasks extends Component{\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        tasksOfThePost: [],\r\n        details:false,\r\n        specificPostModal:false\r\n    };\r\n    }\r\n\r\n    setOpenCloseTask(){\r\n      this.setState({details: !this.state.details});\r\n    }\r\n\r\n    render(){\r\n        const { id, title, description, update_time, status} = this.props.data;\r\n        return(\r\n            <View style={styles.card}>\r\n                {!this.state.details ? \r\n                <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, flexDirection:'row', \r\n                justifyContent:'space-between', alignItems:'center'}}>\r\n                    <Text style={styles.titulo}>{title}</Text>\r\n                    <Text style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, \r\n                                  fontSize:14, padding:10, marginRight:18, marginBottom:-10}} onPress={()=>this.setOpenCloseTask()}> \r\n                                  Details\r\n                    </Text>\r\n                </View>\r\n              \r\n              :\r\n              <View>\r\n                <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, flexDirection:'row', \r\n                justifyContent:'space-between', alignItems:'center'}}>\r\n                    <Text style={styles.titulo}>{title}</Text>\r\n                    {/* <Text style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, \r\n                                  fontSize:14, padding:10, marginRight:18, marginBottom:-10}}> \r\n                                  {status}\r\n                    </Text> */}\r\n                    {status==\"DONE\" ? \r\n                        <Text onPress={()=>this.setOpenCloseTask()}\r\n                              style={{backgroundColor:'#32CD32', color:'#FFF', fontWeight:'700', borderRadius:30, fontSize:15, padding:15, marginRight:20, marginBottom:-25}}>{status}</Text> :\r\n                        <Text onPress={()=>this.setOpenCloseTask()}\r\n                              style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, fontSize:14, padding:10, marginRight:18, marginBottom:-10}}>{status}</Text>\r\n                      }\r\n                </View>\r\n\r\n                <View style={{flex:1}}>\r\n                  <Text style={{fontSize: 12, padding: 10, marginTop:10}}>Description: {description}</Text>\r\n                </View>\r\n                <Text style={styles.texto}>Last Update: {update_time}</Text>\r\n\r\n                {/* <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, paddingBottom:10, flexDirection:'row', \r\n                              justifyContent:'space-between', alignItems:'center'}}>\r\n\r\n                    <Text style={styles.texto}>Comments: {comments}</Text>\r\n                </View> */}\r\n              </View>\r\n              }\r\n            </View>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card:{\r\n      width:Dimensions.get(\"screen\").width,\r\n      shadowColor: '#000',\r\n      backgroundColor: '#efefef',\r\n      shadowOffset: {width:0, height: 1},\r\n      shadowOpacity: 0.8,\r\n      marginBottom: 12,\r\n      shadowRadius: 6,\r\n      borderRadius: 40,\r\n      elevation: 4,\r\n      padding:10\r\n    },\r\n    specificPostModal:{\r\n      flex:1,\r\n      width:Dimensions.get(\"screen\").width,\r\n      backgroundColor:'#efefef',\r\n      justifyContent:'center',\r\n      alignItems:'center'\r\n    },\r\n    titulo:{\r\n      width: 240,\r\n      fontSize: 17,\r\n      marginLeft:5,\r\n      padding: 5\r\n    },\r\n    texto:{\r\n      fontSize: 12,\r\n      padding: 10,\r\n    },\r\n    capa:{\r\n      height: 250,\r\n      zIndex: 2,\r\n    },\r\n    Areabotao:{\r\n      alignItems: 'flex-end',\r\n      marginTop: -40,\r\n      zIndex: 9\r\n    },\r\n    botao:{\r\n      width: 100,\r\n      backgroundColor: '#09A6FF',\r\n      opacity: 1,\r\n      padding: 10,\r\n      borderTopLeftRadius: 5,\r\n      borderBottomLeftRadius: 5,\r\n  \r\n    },\r\n    botaoVoltarALista:{\r\n      width:200,\r\n      borderWidth:1,\r\n      borderColor:'#6495ED',\r\n      marginTop:60,\r\n      padding: 0,\r\n      borderRadius:10,\r\n      alignItems:'center',\r\n      justifyContent:'center'\r\n  \r\n    },\r\n    botaoTexto:{\r\n      textAlign: 'center',\r\n      color: '#FFF'\r\n    }\r\n  });\r\n\r\nexport default Tasks;","import React, {Component} from 'react';\r\nimport {View, Text, StyleSheet, Image, FlatList, TouchableOpacity, ActivityIndicator, Modal, Dimensions, ScrollView, Alert} from 'react-native';\r\n\r\nimport postApi from './PostServices/postApi';\r\nimport Tasks from './Tasks';\r\n\r\nimport { format } from \"date-fns\";\r\n\r\nclass Posts extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      specificPost: [],\r\n      tasksOfThePost: [],\r\n      specificPostModal:false,\r\n      loadMyPosts: false,\r\n      assignUser:[]\r\n    };\r\n  }\r\n\r\n  // async componentDidMount(){\r\n  //  const response = await postApi.get('users/'+id.toString());\r\n  //   this.setState({\r\n  //     assignUser: response.data,\r\n  //   });\r\n  // }\r\n\r\n  async fcnSpecificPost(postId,assignedUserId, visibility){\r\n    const getPost = 'posts/'+postId.toString();\r\n    const response = await postApi.get(getPost);\r\n    this.setState({\r\n      specificPost: response.data,\r\n      loading: false\r\n    });\r\n    const getTasksOfPost = 'tasks/get-by-post-id/'+postId.toString();\r\n    const responsetasks = await postApi.get(getTasksOfPost);\r\n    this.setState({\r\n      tasksOfThePost: responsetasks.data,\r\n      loading: false\r\n    });\r\n    //Bring Assigned User\r\n    if(assignedUserId!=null){\r\n      const responseAssignedUser = await postApi.get('users/'+assignedUserId.toString());\r\n      this.setState({\r\n        assignUser: responseAssignedUser.data,\r\n      });\r\n    }\r\n\r\n    this.setState({specificPostModal:visibility})\r\n  }\r\n\r\n  askToAssignUserToPost(postId, userId, visibility){\r\n\r\n    Alert.alert(\r\n      'ASSIGN:',\r\n      'Are you sure you want to assign to this task?',\r\n      [\r\n        // { text: 'OK', onPress: () => this.setState({newLoginModal:false}) },\r\n        { text: 'OK', onPress: () => this.assignUserToPost(postId, userId, visibility) },\r\n        { text: 'Cancel', onPress: () => this.setState({specificPostModal:true}), style:'cancel' },\r\n      ],\r\n      {cancelable: false},\r\n    ); \r\n\r\n  }\r\n\r\n  async assignUserToPost(postId, userId,visibility){\r\n    this.setState({loadMyPosts: true});\r\n    //'posts/assign-user?post_id=3&assign_id=2'\r\n    try{\r\n      //A Execução abaixo já atualiza o post para ASIGNED\r\n      const path = 'posts/assign-user?post_id='+postId.toString()+'&assign_id='+userId.toString();\r\n      const response = await postApi.put(path);\r\n      this.setState({\r\n        specificPost: response.data,\r\n        loading: false\r\n      });\r\n      \r\n      // await postApi.put('posts/'+postId.toString()+'/next-status');\r\n\r\n      const getTasksOfPost = 'tasks/get-by-post-id/'+postId.toString();\r\n      const responsetasks = await postApi.get(getTasksOfPost);\r\n      this.setState({\r\n        tasksOfThePost: responsetasks.data,\r\n        loading: false\r\n      });\r\n      // this.setState({loadMyPosts: false, specificPostModal:visibility});\r\n      // this.setState({specificPostModal:visibility})\r\n\r\n      Alert.alert(\r\n        'ASSIGNED:',\r\n        '\\nGreat!!!\\n\\nHave a look at assigned tasks now',\r\n        [\r\n          // { text: 'OK', onPress: () => this.setState({newLoginModal:false}) },\r\n          { text: 'OK', onPress: () => this.setState({loadMyPosts: false, specificPostModal:visibility}) }\r\n        ],\r\n        {cancelable: false},\r\n      ); \r\n    }catch(error) {\r\n      this.setState({loadMyPosts: false});\r\n      this.setState({specificPostModal:false})\r\n      Alert.alert(\r\n        'Sorry,',\r\n        'We could not coplete the request.\\n\\nIt will be fixed soon.',\r\n        [{ text: 'OK'}],\r\n        {cancelable: false},\r\n      );\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n    const { id, title, description, type, date, status, user_name, assignedUserId } = this.props.data;\r\n    const userId  = this.props.userId;\r\n\r\n    if(this.state.loading){\r\n      return(\r\n        <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\r\n          <ActivityIndicator color=\"#09A6FF\" size={40}/>\r\n        </View>\r\n      )\r\n    }else{\r\n      return(\r\n        <ScrollView>\r\n\r\n\r\n\r\n          {/*            INSIDE A POST MODAL - SO USER CAN ASSIGN IT         */}\r\n\r\n\r\n\r\n\r\n            <Modal animationType='slide' visible={this.state.specificPostModal}>\r\n              <View style={styles.specificPostModal}>\r\n\r\n                {/* <View style={{alignItems:'center',justifyContent:'center', width:Dimensions.get(\"screen\").width, marginBottom:20, marginTop:-40}}>\r\n                  <TouchableOpacity style={styles.botaoAssign} onPress={()=>this.fcnSpecificPost(id,false)}>\r\n                    <Text style={{color:'#FFF', fontSize: 14, margin:3, padding:5}}>ASSIGN</Text>\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n\r\n                {/* ONE POST - TITLE */}\r\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width, \r\n                              borderBottomWidth:1,borderColor:'#09A6FF', marginBottom:0, marginTop:10, padding:15, paddingTop:10}}>\r\n                  <TouchableOpacity onPress={()=>this.fcnSpecificPost(id,assignedUserId,false)} \r\n                                  style={{width:46, height:46, borderWidth:1.5, alignItems:'center',\r\n                                  justifyContent:'center',borderColor:'#FF2f28', borderRadius:23, marginRight:10}} >\r\n                    <Text style={{marginTop:0, fontSize:10, color:'#FF2f28'}}>Back</Text>\r\n                  </TouchableOpacity>\r\n                  {this.state.specificPost.status==\"OPEN\"?  \r\n                    <TouchableOpacity style={styles.botaoAssign} onPress={()=>this.askToAssignUserToPost(id, userId,false)}>\r\n                      <Text style={{color:'#FFF', fontSize: 16, margin:3, padding:5}}>ASSIGN</Text>\r\n                    </TouchableOpacity>\r\n                    :\r\n                    <TouchableOpacity style={styles.botaoAssigned}>\r\n                      <Text style={{color:'#4f55ED', fontSize: 18, margin:3, padding:5}}>ASSIGNED</Text>\r\n                    </TouchableOpacity>\r\n                  }\r\n\r\n                </View>\r\n    \r\n                <View style={{flexDirection:'row', justifyContent:'space-between', width:Dimensions.get(\"screen\").width}}>\r\n                  <View style={styles.AreaCreatedByUserIsideAPost}>\r\n                    <View style={styles.botaoCreatedByUserIsideAPost} >\r\n                      <Text style={styles.botaoTextoCreatedByUser}>Created by: {user_name}</Text>\r\n                    </View>\r\n                  </View>\r\n                  <View style={styles.AreaCreatedByUserIsideAPost}>\r\n                    <View style={styles.botaoCreatedByUserIsideAPost2} >\r\n                      <Text style={styles.botaoTextoCreatedByUser}>Assigned to: {this.state.assignUser.firstName} {this.state.assignUser.lastName}</Text>\r\n                    </View>\r\n                  </View>\r\n\r\n                </View>\r\n                  <Text style={{paddingLeft:15, paddingRight:15, paddingBottom:15, fontSize:18, fontWeight:'600', width:Dimensions.get(\"screen\").width,\r\n                                borderBottomWidth:1,borderColor:'#09A6FF'}}>\r\n                    - {this.state.specificPost.title}</Text>\r\n\r\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width, \r\n                              marginBottom:5, marginTop:1, padding:5}}>\r\n                    <Text style={{fontSize:12, alignSelf:'center'}}>TYPE</Text>\r\n                    <View>\r\n                      <Text style={{fontSize:9, alignSelf:'center'}}> Last Update: </Text>\r\n                      <Text style={{fontSize:11, alignSelf:'center'}}> {(this.state.specificPost.update_time)} </Text>\r\n                    </View>\r\n                    <Text style={{fontSize:12, alignSelf:'center'}}>STATUS</Text>\r\n\r\n                </View>\r\n                {/* ONE POST - TYPE AND AND LAST UPDATE */}\r\n                <View style={{width:Dimensions.get(\"screen\").width, alignItems:'center',justifyContent:'center', flexDirection:'row', \r\n                                justifyContent:'space-between', marginBottom:5, marginTop:5, paddingRight:20, paddingLeft:20, \r\n                                borderBottomWidth:1,borderColor:'#09A6FF', paddingBottom:10}}>\r\n                  <Text style={{backgroundColor:'#6495ED', color:'#FFF', borderRadius:20, fontSize:12, padding:10}}>   {this.state.specificPost.type}   </Text>\r\n                  <View>\r\n                  {this.state.specificPost.status==\"OPEN\" ? \r\n                    <Text style={{backgroundColor:'#32CD32', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text> :\r\n                    <Text style={{backgroundColor:'#6495ED', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text>\r\n                  }\r\n                  </View>\r\n                </View>\r\n                {/* ONE POST - DESCRIPTION */}\r\n                <View style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12,  paddingBottom:8, backgroundColor:'#efefef', \r\n                             color:'#000', borderRadius:15, marginLeft:0}}>\r\n                    <Text style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12,  padding:8, backgroundColor:'#efefef', color:'#000',\r\n                    borderRadius:10,marginLeft:14}}>   DESCRIPTION   </Text>\r\n                    <View style={{width:Dimensions.get(\"screen\").width/1.04, alignSelf:'center', borderWidth:0.5, borderColor:'#C0C0C0', backgroundColor:'#FFF', borderRadius:15, marginBottom:12, padding:10}}>\r\n                      <Text style={{fontSize:12, paddingBottom:6, marginLeft:2}}>- {this.state.specificPost.description}</Text>\r\n                    </View>\r\n                  {/* ONE POST - DATE */}\r\n                    <Text style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12, padding:8, paddingTop:0, backgroundColor:'#efefef', color:'#000',\r\n                  borderRadius:10,marginLeft:14}}>   DATE   </Text>\r\n                    <View style={{width:Dimensions.get(\"screen\").width/1.04, alignSelf:'center', borderWidth:0.5, borderColor:'#C0C0C0', backgroundColor:'#FFF', borderRadius:15, marginBottom:5, padding:10}}>\r\n                      <Text style={{fontSize:12, paddingBottom:5, marginLeft:2}}>{this.state.specificPost.date == null? \"Negotiable\" : format(new Date(this.state.specificPost.date), \"MMMM do, yyyy - H:mma\")}</Text>\r\n                    </View>\r\n                </View>\r\n                {/* TASKS LIST OF ONE POST */}\r\n\r\n                <Text style={{alignSelf:'center', fontSize:14, padding:8, backgroundColor:'#FFF', color:'#000', fontWeight:'700', borderTopLeftRadius:10, \r\n                borderTopRightRadius:10, marginLeft:0,marginBottom:1,marginTop:10, shadowRadius: 6, borderRadius: 5,  elevation: 4,shadowColor: '#000',  backgroundColor: '#FFF',\r\n                shadowOffset: {width:0, height: 1}, shadowOpacity: 0.8, width:Dimensions.get(\"screen\").width/1.2}}>   TASKS ( {this.state.tasksOfThePost.length} )   </Text>\r\n                <FlatList\r\n                  data={this.state.tasksOfThePost}\r\n                  keyExtractor={item => item.id.toString() }\r\n                  renderItem={ ({item}) => <Tasks data={item} /> }\r\n                />\r\n\r\n                {/* ONE POST - RETURN BUTTOM */}\r\n                {/* <View style={{alignItems:'center',justifyContent:'center', width:Dimensions.get(\"screen\").width, marginBottom:20, marginTop:-40}}>\r\n                  <TouchableOpacity style={styles.botaoVoltarALista} onPress={()=>this.fcnSpecificPost(id,false)}>\r\n                    <Text style={{color:'#6495ED', fontSize: 14, margin:3, padding:5}}>Back</Text>\r\n                  </TouchableOpacity>\r\n                </View> */}\r\n                \r\n              </View>\r\n            </Modal>\r\n          \r\n          \r\n          {/* MAIN SCREEN - LIST OS POSTS*/}\r\n          <View style={styles.card}>\r\n              <View style={styles.AreaCreatedByUser}>\r\n                <View style={styles.botaoCreatedByUser} >\r\n                  <Text style={styles.botaoTextoCreatedByUser}>Created by: {user_name}</Text>\r\n                </View>\r\n              </View>\r\n          {/* <Text>- {userId} -</Text> */}\r\n          <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:10, flexDirection:'row', paddingRight:8,paddingLeft:2, \r\n                justifyContent:'space-between', alignItems:'center'}}>\r\n            <Text style={styles.titulo}>{title}</Text>\r\n            {status == 'OPEN' ? \r\n                <Text style={{backgroundColor:'#32CD32', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n                :\r\n                  status == 'CLOSED' ? \r\n                  <Text style={{backgroundColor:'#fF2f28', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n                  :\r\n                    status=='DONE' ?\r\n                      <Text style={{backgroundColor:'#09A6FF', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n                    :\r\n                      <Text style={{backgroundColor:'#6495ED', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n              }\r\n            {/* {status==\"OPEN\" ? \r\n              <Text style={{fontSize: 12,padding: 5,backgroundColor:'#32CD32', color:'#FFF', borderRadius:15}}>{status}</Text> :\r\n              <Text style={{fontSize: 12,padding: 5,backgroundColor:'#6495ED', color:'#FFF', borderRadius:15}}>{status}</Text>\r\n            } */}\r\n          </View>\r\n          <View style={{marginBottom:12, marginTop:5, flexDirection:'row', justifyContent:'space-between', alignItems:'center', \r\n                        paddingRight:10, paddingBottom:5}}>\r\n              <Text style={styles.texto}>{description}</Text>\r\n              {type == 'MANUAL_SERVICES' ? \r\n                <Text style={{borderWidth:1,borderColor:'#6495ED', color:'#6495ED', borderRadius:20, fontSize:9, padding:4}}>{type}</Text>\r\n              :\r\n                <Text style={{borderWidth:1,borderColor:'#6495ED', color:'#6495ED', borderRadius:20, fontSize:12, padding:4}}>{type}</Text>\r\n              }\r\n\r\n          </View>\r\n            <Text style={styles.texto}>Date: {date == null? \"Open\" : format(new Date(date), \"MMMM do, yyyy - H:mma\")}</Text>\r\n            \r\n            {/* <Image\r\n            source={{ uri: foto }}\r\n            style={styles.capa}\r\n            /> */}\r\n\r\n                \r\n            {status==\"CANCELLED\" ? <View></View> :\r\n                <View style={styles.Areabotao}>\r\n                  <TouchableOpacity style={styles.botao} onPress={()=>this.fcnSpecificPost(id,assignedUserId,true)} >\r\n                    <Text style={styles.botaoTexto}>INFO</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n            }\r\n\r\n\r\n          </View>\r\n\r\n\r\n\r\n\r\n{/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n          <Modal animationType='fade' transparent={true} visible={this.state.loadMyPosts} style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\r\n              <View style={{marginTop:200, alignSelf:'center', width:100, height:100, backgroundColor:'#FFf', borderWidth:1, borderColor:'#09A6FF', borderRadius:40}}>\r\n                <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\r\n                  <ActivityIndicator color=\"#09A6FF\" size={30}/>\r\n                  <Text style={{color:'#09A6FF', fontSize:7}}>wait</Text>\r\n                </View>\r\n              </View>\r\n          </Modal>\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n        </ScrollView>\r\n      )\r\n    };\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card:{\r\n    shadowColor: '#000',\r\n    backgroundColor: '#FFF',\r\n    shadowOffset: {width:0, height: 1},\r\n    shadowOpacity: 0.8,\r\n    margin: 15,\r\n    shadowRadius: 6,\r\n    borderRadius: 5,\r\n    elevation: 4,\r\n  },\r\n  specificPostModal:{\r\n    flex:1,\r\n    backgroundColor:'#FFF',\r\n    justifyContent:'flex-start',\r\n    alignItems:'flex-start'\r\n  },\r\n  titulo:{\r\n    width:240,\r\n    fontSize: 18,\r\n    padding: 10\r\n  },\r\n  texto:{\r\n    fontSize: 12,\r\n    padding: 10, \r\n    width:Dimensions.get(\"screen\").width/1.5\r\n  },\r\n  capa:{\r\n    height: 250,\r\n    zIndex: 2,\r\n  },\r\n  \r\n  Areabotao:{\r\n    alignItems: 'flex-end',\r\n    marginTop: -40,\r\n    zIndex: 9\r\n  },\r\n  botao:{\r\n    width: 100,\r\n    backgroundColor: '#10A08a',\r\n    opacity: 1,\r\n    padding: 10,\r\n    borderTopLeftRadius: 30,\r\n    borderBottomLeftRadius: 5,\r\n\r\n  },\r\n\r\n  AreaCreatedByUser:{\r\n    alignItems: 'flex-start',\r\n    marginBottom: -2,\r\n    zIndex: -9\r\n  },\r\n  botaoCreatedByUser:{\r\n    width: Dimensions.get(\"screen\").width/1.5,\r\n    backgroundColor: '#10A08a',\r\n    opacity: 1,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    borderBottomRightRadius: 30,\r\n    justifyContent:'flex-start'\r\n  },\r\n  botaoTextoCreatedByUser:{\r\n    textAlign: 'left',\r\n    color: '#FFF',\r\n    fontSize:11\r\n  },\r\n  AreaCreatedByUserIsideAPost:{\r\n    alignItems: 'flex-start',\r\n    marginBottom: 10,\r\n    //zIndex:9\r\n  },\r\n  botaoCreatedByUserIsideAPost:{\r\n    width: Dimensions.get(\"screen\").width/2,\r\n    backgroundColor: '#2F4F4F',\r\n    opacity: 1,\r\n    padding: 5,\r\n    paddingBottom:10,\r\n    paddingTop:10,\r\n    paddingLeft:12,\r\n    borderBottomLeftRadius: 5,\r\n    borderBottomRightRadius: 30,\r\n    borderTopRightRadius: 0,\r\n    justifyContent:'flex-start'\r\n  },\r\n  botaoCreatedByUserIsideAPost2:{\r\n    width: Dimensions.get(\"screen\").width/2,\r\n    backgroundColor: '#4f55ED',\r\n    opacity: 1,\r\n    padding: 5,\r\n    paddingBottom:10,\r\n    paddingTop:10,\r\n    paddingLeft:20,\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 5,\r\n    borderTopRightRadius: 0,\r\n    justifyContent:'flex-start'\r\n  },\r\n  \r\n  botaoVoltarALista:{\r\n    width:150,\r\n    borderWidth:1,\r\n    borderColor:'#6495ED',\r\n    marginTop:60,\r\n    padding: 0,\r\n    borderRadius:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n\r\n  },\r\n  botaoTexto:{\r\n    textAlign: 'center',\r\n    color: '#FFF',\r\n    fontSize:12\r\n  },\r\n  botaoAssign:{\r\n    width:180,\r\n    borderWidth:2,\r\n    borderColor:'#778899',\r\n    // marginTop:60,\r\n    padding: 0,\r\n    borderRadius:30,\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    shadowColor: '#000',\r\n    backgroundColor: '#2F4F4F',\r\n    shadowOffset: {width:0, height: 1},\r\n    shadowOpacity: 1,\r\n    shadowRadius: 7,\r\n    borderRadius: 10,\r\n    elevation: 6,\r\n  },\r\n  botaoAssigned:{\r\n    width:180,\r\n    borderWidth:2,\r\n    borderColor:'#4f55ED',\r\n    // marginTop:60,\r\n    padding: 0,\r\n    borderRadius:30,\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    shadowColor: '#000',\r\n    backgroundColor: '#FFF',\r\n    shadowOffset: {width:0, height: 1},\r\n    shadowOpacity: 1,\r\n    shadowRadius: 7,\r\n    borderRadius: 10,\r\n    elevation: 6,\r\n  }\r\n});\r\n\r\nexport default Posts;","import axios from 'axios';\r\n\r\n//https://sujeitoprogramador.com/r-api/?api=filmes\r\n\r\nconst postApi = axios.create({\r\n  // baseURL: 'http://localhost:8080/'\r\n  // baseURL: 'http://192.168.0.111:8080/'\r\n  // baseURL: 'http://192.168.0.23:8080/'\r\n  // baseURL: 'https://crud-stareng.herokuapp.com/'\r\n\r\n  //baseURL: 'http://192.168.1.11:8080/'\r\n  \r\n  //baseURL: 'https://ola-task.herokuapp.com/'\r\n\r\n  baseURL: 'https://timing-control.herokuapp.com/'\r\n  \r\n});\r\n\r\nexport default postApi;","import React, {Component} from 'react';\r\nimport {View, Text, StyleSheet, Alert, ActivityIndicator, TouchableOpacity, Modal, Dimensions} from 'react-native';\r\n\r\nimport postApi from '../PostServices/postApi';\r\n\r\nclass Tasks extends Component{\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        tasksOfThePost: [],\r\n        specificPostModal:false,\r\n        hideTask:false,\r\n        details:false,\r\n        loadingToDeleteTask:false,\r\n    };\r\n}\r\n\r\nsetTaskStatus(status){\r\n  // for(var i = 1; i < statusArray.length; i++) {\r\n  //   if(statusArray[i]==status){\r\n  //     this.setPlaceOfStatus(i);\r\n  //   }\r\n  // }\r\n  this.setState({details: !this.state.details});\r\n}\r\n\r\naskToDeleteThisTaskAndHideCard(id){\r\n\r\n  Alert.alert(\r\n    'DETELE TASK',\r\n    'Are you sure you want to delete this task?',\r\n    [\r\n      // { text: 'OK', onPress: () => this.setState({newLoginModal:false}) },\r\n      { text: 'OK', onPress: () => this.executeFunctionToDeleteCard(id) },\r\n      { text: 'Cancel' },\r\n    ],\r\n    {cancelable: false},\r\n    );\r\n\r\n}\r\n\r\nasync executeFunctionToDeleteCard(id) {\r\n  this.setState({ loadingToDeleteTask:true });\r\n  try{\r\n\r\n    //const getPost = 'http://192.168.1.11:8080/tasks/'+id.toString();\r\n    //const getPost = 'https://ola-task.herokuapp.com/tasks/'+id.toString();\r\n    const getPost = 'https://timing-control.herokuapp.com/tasks/'+id.toString();\r\n\r\n    await postApi.delete(getPost);\r\n\r\n  }catch(error) {\r\n    Alert.alert(\r\n      'Sorry,',\r\n      'We could not coplete the request.\\n\\nIt will be fixed soon.\\n\\nError to delete task.',\r\n      [{ text: 'OK'}],\r\n      {cancelable: false},\r\n    );\r\n    console.log('ERROR: ' + error);\r\n  }\r\n  this.setState({ \r\n    loadingToDeleteTask:false,\r\n    hideTask:true\r\n   });\r\n  \r\n}\r\n\r\n    render(){\r\n        const { id, title, description, update_time, status, comments} = this.props.data;\r\n        return(\r\n          <View>\r\n            {this.state.hideTask ? <View></View> : \r\n\r\n              <View style={styles.card}>\r\n\r\n                { !this.state.details ? \r\n                <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, flexDirection:'row', \r\n                justifyContent:'space-between', alignItems:'center'}}>\r\n                    <Text style={styles.titulo}>{title}</Text>\r\n                    <Text style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, \r\n                                  fontSize:14, padding:10, marginRight:18, marginBottom:-10}} onPress={()=>this.setTaskStatus(status)}> \r\n                                  Details\r\n                    </Text>\r\n                </View>\r\n              \r\n              :\r\n                <View>\r\n                  <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, flexDirection:'row', \r\n                                justifyContent:'space-between', alignItems:'center'}}>\r\n                      <Text style={styles.titulo}>{title}</Text>\r\n                      {/* <Text style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:10, fontSize:12, padding:5, marginRight:18}}>{status}</Text> */}\r\n                      {status==\"DONE\" ? \r\n                        <Text onPress={()=>this.setTaskStatus(status)} \r\n                              style={{backgroundColor:'#32CD32', color:'#FFF', fontWeight:'700', borderRadius:30, fontSize:15, padding:15, marginRight:20, marginBottom:-25}}>{status}</Text> :\r\n                        <Text onPress={()=>this.setTaskStatus(status)}\r\n                              style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, fontSize:14, padding:10, marginRight:18, marginBottom:-10}}>{status}</Text>\r\n                      }\r\n                  </View>\r\n\r\n                    <View style={{flex:1}}>\r\n                      <Text style={styles.texto}>Description: {description}</Text>\r\n\r\n                    </View>\r\n                    <Text style={styles.texto}>Last Update: {update_time}</Text>\r\n                    <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, flexDirection:'row', \r\n                                justifyContent:'space-between', alignItems:'center'}}>\r\n                      <Text style={{fontSize: 12, padding: 10}}>Comments: {comments}</Text>\r\n                      \r\n              {  status.toString()!=\"CREATED\" ? \r\n                        // <View style={{alignSelf:'center', marginRight:27, width:55, height:55, backgroundColor:'#FFf', \r\n                        //             borderWidth:1, borderColor:'#eF2f28', borderRadius:30, paddingBottom:-10}}>\r\n                        //   <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\r\n                        //     <ActivityIndicator color=\"#eF2f28\" size={30}/>\r\n                        //     <Text style={{color:'#eF2f28', fontSize:7}}>wait</Text>\r\n                        //   </View>\r\n                        // </View>\r\n                      <View></View>\r\n                    :\r\n                    \r\n                      <TouchableOpacity style={{backgroundColor:'#eF2f28', borderRadius:15, marginRight:18, marginTop:-0}} \r\n                        onPress={()=>this.askToDeleteThisTaskAndHideCard(id)}>\r\n                            <Text style={{color:'#fff', fontWeight:'700', padding:5}}>Remove</Text>\r\n                      </TouchableOpacity>\r\n                      \r\n                  }\r\n\r\n                    \r\n                  </View>\r\n                </View>\r\n              }\r\n\r\n              </View>\r\n\r\n            }\r\n        </View>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card:{\r\n      width:Dimensions.get(\"screen\").width,\r\n      shadowColor: '#000',\r\n      backgroundColor: '#efefef',\r\n      shadowOffset: {width:0, height: 1},\r\n      shadowOpacity: 0.8,\r\n      marginBottom: 12,\r\n      shadowRadius: 6,\r\n      borderRadius: 40,\r\n      elevation: 4,\r\n      padding:10\r\n    },\r\n    specificPostModal:{\r\n      flex:1,\r\n      width:Dimensions.get(\"screen\").width,\r\n      backgroundColor:'#efefef',\r\n      justifyContent:'center',\r\n      alignItems:'center'\r\n    },\r\n    titulo:{\r\n      width: 240,\r\n      fontSize: 17,\r\n      marginLeft:5,\r\n      padding: 5\r\n    },\r\n    texto:{\r\n      fontSize: 12,\r\n      padding: 10,\r\n    },\r\n    capa:{\r\n      height: 250,\r\n      zIndex: 2,\r\n    },\r\n    Areabotao:{\r\n      alignItems: 'flex-end',\r\n      marginTop: -40,\r\n      zIndex: 9\r\n    },\r\n    botao:{\r\n      width: 100,\r\n      backgroundColor: '#09A6FF',\r\n      opacity: 1,\r\n      padding: 10,\r\n      borderTopLeftRadius: 5,\r\n      borderBottomLeftRadius: 5,\r\n  \r\n    },\r\n    botaoVoltarALista:{\r\n      width:200,\r\n      borderWidth:1,\r\n      borderColor:'#6495ED',\r\n      marginTop:60,\r\n      padding: 0,\r\n      borderRadius:10,\r\n      alignItems:'center',\r\n      justifyContent:'center'\r\n  \r\n    },\r\n    botaoTexto:{\r\n      textAlign: 'center',\r\n      color: '#FFF'\r\n    }\r\n  });\r\n\r\nexport default Tasks;","import React, {Component} from 'react';\r\nimport {View, Text, StyleSheet, Image, FlatList, TouchableOpacity, ActivityIndicator, Modal, Dimensions, Keyboard, ScrollView, Alert, TextInput, KeyboardAvoidingView} from 'react-native';\r\n\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport { format } from \"date-fns\";\r\n\r\nimport postApi from './PostServices/postApi';\r\nimport Tasks from './Tasks';\r\n\r\nconst taskTitle=[];\r\nconst taskDescription=[];\r\n\r\nclass PostsByUser extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      specificPost: [],\r\n      tasksOfThePost: [],\r\n      specificPostModal:false,\r\n      openEditModal:false,\r\n      loadMyPosts: false,\r\n      closeTaskBool: false,\r\n\r\n      postTitle:'',\r\n      postDescription:'',\r\n      postType:'',\r\n      postStatus:'',\r\n      postDate:'',\r\n      taskTitle: [],\r\n      taskTitleWriting:'',\r\n      taskDescription: [],\r\n      taskDescriptionWriting:'',\r\n      taskPosition:[],\r\n      assignUser:[]\r\n    };\r\n\r\n    this.setPostTitle = this.setPostTitle.bind(this);\r\n    this.setPostDescription = this.setPostDescription.bind(this);\r\n    this.setPostType = this.setPostType.bind(this);\r\n    this.setPostStatus = this.setPostStatus.bind(this);\r\n    this.setPostDate = this.setPostDate.bind(this);\r\n\r\n    this.setTaskTitleWriting = this.setTaskTitleWriting.bind(this);\r\n    this.setTaskDescriptionWriting = this.setTaskDescriptionWriting.bind(this);\r\n    this.setTaskPosition = this.setTaskPosition.bind(this);\r\n\r\n  }\r\n\r\n  setPostTitle(text){    this.setState({postTitle: text});  }\r\n  setPostDescription(text){    this.setState({postDescription: text});  }\r\n  setPostType(text){    this.setState({setPostType: text});  }\r\n  setPostStatus(text){    this.setState({postStatus: text});  }\r\n  setPostDate(text){    this.setState({postDate: text});  }\r\n  setShowAllSubTasks(visibility){    this.setState({showAllSubTasks: visibility});  }\r\n  setTaskTitleWriting(text){    this.setState({taskTitleWriting: text});  }\r\n  setTaskDescriptionWriting(text){    this.setState({taskDescriptionWriting: text});  }\r\n  setTaskPosition(text){    this.setState({taskPosition: text});  }\r\n\r\n\r\n  async fcnSpecificPost(postId,assignedUserId, visibility){\r\n\r\n    this.setState({loadMyPosts: true});\r\n    if(visibility){\r\n      try{\r\n          const getPost = 'posts/'+postId.toString();\r\n          const response = await postApi.get(getPost);\r\n          this.setState({\r\n            specificPost: response.data,\r\n            loading: false\r\n          });\r\n\r\n          const getTasksOfPost = 'tasks/get-by-post-id/'+postId.toString();\r\n          const responsetasks = await postApi.get(getTasksOfPost);\r\n          this.setState({\r\n            tasksOfThePost: responsetasks.data,\r\n            loading: false\r\n          });\r\n          this.setState({specificPostModal:visibility})\r\n\r\n          //Bring Assigned User\r\n          if(assignedUserId!=null){\r\n            const responseAssignedUser = await postApi.get('users/'+assignedUserId.toString());\r\n            this.setState({\r\n              assignUser: responseAssignedUser.data,\r\n            });\r\n          }\r\n          \r\n      }catch(error) {\r\n        this.setState({specificPostModal:false})\r\n        Alert.alert(\r\n          'Sorry,',\r\n          'We could not coplete the request.\\n\\nIt will be fixed soon.',\r\n          [{ text: 'OK'}],\r\n          {cancelable: false},\r\n        );\r\n        console.log('ERROR: ' + error);\r\n      }\r\n      \r\n    }else{\r\n      this.setState({specificPostModal:visibility})\r\n    }\r\n    //cleaning task_aux\r\n    for(var i = 0; i < taskTitle.length; i++) {\r\n      taskTitle.pop();\r\n      taskDescription.pop();\r\n    }\r\n    this.setState({loadMyPosts: false});\r\n    \r\n  }\r\n\r\n  askToPUTPostToNextStatus(postId){\r\n\r\n    Alert.alert(\r\n      'CLOSE',\r\n      '\\nFinish this task?\\n\\nYou will not be able to change it later',\r\n      [\r\n        // { text: 'OK', onPress: () => this.setState({newLoginModal:false}) },\r\n        { text: 'OK', onPress: () => this.executePostToNextStatus(postId) },\r\n        { text: 'Cancel', style:'cancel' },\r\n      ],\r\n      {cancelable: false},\r\n    ); \r\n\r\n  }\r\n\r\n  async executePostToNextStatus(postId){\r\n    this.setState({loadMyPosts: true});\r\n    try{\r\n\r\n      await postApi.put('posts/'+postId.toString()+'/next-status');\r\n      \r\n      this.setPostStatus('DONE')\r\n      \r\n      // this.setState({loadMyPosts: false})\r\n      Alert.alert(\r\n        'CONGRATS,',\r\n        '\\nWe closed this task.\\n\\nPlease, update your list to check its new status.\\n\\nThanks for using OLA TASK!',\r\n        [{ text: 'OK', onPress: ()=>this.setState({loadMyPosts: false})}],\r\n        {cancelable: false},\r\n      );\r\n      \r\n    }catch(error) {\r\n      this.setState({loadMyPosts: false, closeTaskBool:true});\r\n      // this.setState({specificPostModal:false})\r\n      Alert.alert(\r\n        'Sorry,',\r\n        'We could not coplete the request.\\n\\nIt will be fixed soon.',\r\n        [{ text: 'OK'}],\r\n        {cancelable: false},\r\n      );\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n  fcnCheckOptions(){\r\n    Alert.alert(\r\n      'OPTIONS:',\r\n      'You would like to edit this task?',\r\n      [\r\n        { text: 'Edit  ', onPress: () => this.OpenEditModal()  },\r\n        { text: '  Cancel', onPress: () => this.setState({openEditModal:false}), style:'cancel' },\r\n      ],\r\n      {cancelable: false},\r\n    );\r\n\r\n  }\r\n\r\n   fcnEditModal(visibility){\r\n     // Cleaning tasks_aux\r\n    for(var i = 0; i < taskTitle.length; i++) {\r\n      taskTitle.pop();\r\n      taskDescription.pop();\r\n    }\r\n    this.setState({openEditModal:visibility})\r\n  }\r\n\r\n  async OpenEditModal(){\r\n    // this.setState({openEditModal:true});\r\n    try{\r\n\r\n      for(var i = 0; i < this.state.tasksOfThePost.length; i++) {\r\n        taskTitle.push(this.state.tasksOfThePost[i].title);\r\n        taskDescription.push(this.state.tasksOfThePost[i].description);\r\n      }\r\n\r\n\r\n      this.setState({\r\n        postTitle:this.state.specificPost.title,\r\n        postDescription:this.state.specificPost.description,\r\n        postType:this.state.specificPost.type,\r\n        postStatus:this.state.specificPost.status,\r\n        postDate:this.state.specificPost.date,\r\n        taskTitleWriting:'',\r\n        taskDescriptionWriting:'',\r\n\r\n        openEditModal:true\r\n      })\r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n\r\n    //this.setState({openEditModal:true})\r\n  }\r\n\r\n  saveTaskTitleAndDescription(){\r\n      \r\n    try{\r\n      if(this.state.taskTitleWriting!=\"\" && this.state.taskDescriptionWriting!=\"\"){\r\n        const finalNewText = this.state.taskTitleWriting;\r\n        taskTitle.push(finalNewText);\r\n        taskDescription.push(this.state.taskDescriptionWriting);\r\n        this.setTaskTitleWriting(\"\");\r\n        this.setTaskDescriptionWriting(\"\");\r\n      }else{\r\n        Alert.alert(\r\n          'Incorrect',\r\n          'Prease, check if the task or its description is empty and try again.',\r\n          [\r\n            { text: 'OK', onPress: () => ({}) }\r\n          ],\r\n          {cancelable: false},\r\n        );\r\n      }\r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n}\r\n\r\n  setTaskTitle(text){\r\n    try{\r\n      if(text!=\"\"){\r\n        taskTitle.push(text);\r\n      }\r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n  setTaskDescription(text){\r\n    try{\r\n      if(text!=\"\"){\r\n        taskDescription.push(text);\r\n      }\r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n  fcnSavePostChanges(id, assignedUserId){\r\n    try{\r\n        Alert.alert(\r\n          'SAVE CHANGES',\r\n          'Are you sure you want to save the changes for this task?',\r\n          [\r\n            // { text: 'OK', onPress: () => this.setState({subTasksModal:true}) },\r\n            { text: 'OK', onPress: () => this.SavePostChanges(id, assignedUserId) },\r\n            { text: 'Cancel', onPress: () => this.fcnEditModal(false), style:'cancel' },\r\n          ],\r\n          {cancelable: false},\r\n        );\r\n      \r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n  async SavePostChanges(id,assignedUserId){\r\n    \r\n    try{\r\n      this.setState({loadMyPosts: true});\r\n        const newData = \r\n        {\r\n          \"title\": this.state.postTitle,\r\n          \"description\": this.state.postDescription,\r\n          \"type\": this.state.postType,\r\n          \"status\": this.state.postStatus\r\n        };\r\n        const updatePostPath = 'posts/'+(id.toString());\r\n        await postApi.put(updatePostPath,newData);\r\n\r\n        const numberOfTasksInit= this.state.tasksOfThePost.length;\r\n        const numberOfTasksend= taskTitle.length;\r\n        if(numberOfTasksInit < numberOfTasksend){\r\n          for(var i = numberOfTasksInit; i < numberOfTasksend; i++) {\r\n              const newTaskData = \r\n              {\r\n                \"title\": taskTitle[i],\r\n                \"description\": taskDescription[i],\r\n                \"post\": {\"id\": id.toString()}\r\n              };\r\n              await postApi.post('tasks',newTaskData);\r\n            \r\n          }\r\n        }\r\n\r\n        //cleaning task_aux\r\n        for(var i = 0; i < taskTitle.length; i++) {\r\n          taskTitle.pop();\r\n          taskDescription.pop();\r\n        }\r\n\r\n        //Check final pages (what will be opened or not)\r\n        this.fcnSpecificPost(id,assignedUserId,true);\r\n\r\n        this.setState({loadMyPosts: false});\r\n        this.setState({openEditModal: false});\r\n        this.setState({specificPostModal: false});\r\n      // this.setState({subTasksModal:true})\r\n\r\n    }catch(error) {\r\n      this.setState({loadMyPosts: false});\r\n      alert('Api connection error. Please, try again soon. Post '+(id.toString()))\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   \r\n  render(){\r\n\r\n    const { id, title, description, type, date, status, assignedUserId } = this.props.data;\r\n    if(this.state.loading){\r\n      return(\r\n        <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\r\n          <ActivityIndicator color=\"#09A6FF\" size={40}/>\r\n        </View>\r\n      )\r\n    }else{\r\n      return(\r\n        <ScrollView>\r\n\r\n\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* INSIDE ONE POST MODAL */}\r\n            <Modal animationType='slide' visible={this.state.specificPostModal}>\r\n              <View style={styles.specificPostModal}>\r\n                {/* ONE POST - TITLE */}\r\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-between', width:Dimensions.get(\"screen\").width, \r\n                              borderBottomWidth:1,borderColor:'#09A6FF', marginBottom:1, marginTop:15, padding:5}}>\r\n                  <TouchableOpacity onPress={()=>this.fcnSpecificPost(id,assignedUserId,false)} \r\n                                  style={{width:38, height:38, borderWidth:1, alignItems:'center',\r\n                                  justifyContent:'center',borderColor:'#FF2f28', borderRadius:19, marginLeft:5}} >\r\n                    <Text style={{marginTop:0, fontSize:10, color:'#FF2f28'}}>Back</Text>\r\n                  </TouchableOpacity>\r\n                  <Text style={{alignSelf:'center',padding:10, fontSize:20, fontWeight:'600', width:Dimensions.get(\"screen\").width/1.3}}>{this.state.specificPost.title}</Text>\r\n                  {this.state.specificPost.status==\"OPEN\" || this.state.specificPost.status==\"CREATED\" ? \r\n                    <TouchableOpacity onPress={()=>this.fcnCheckOptions()} \r\n                                    style={{width:38, height:38, borderWidth:1, alignItems:'center',\r\n                                    justifyContent:'center',borderColor:'#09A6FF', borderRadius:19, marginRight:15}} >\r\n                      <Text style={{marginTop:6, fontSize:15, color:'#09A6FF'}}>°°°</Text>\r\n                    </TouchableOpacity>\r\n                  : \r\n                    <View></View>\r\n                  } \r\n\r\n                </View>\r\n\r\n                  <View style={{flexDirection:'row', justifyContent:'space-between', width:Dimensions.get(\"screen\").width}}>\r\n                    <View style={styles.AreaCreatedByUserIsideAPost}>\r\n                      <View style={styles.botaoCreatedByUserIsideAPost} >\r\n                        <Text style={styles.botaoTextoCreatedByUser}>Created by you</Text>\r\n                      </View>\r\n                    </View>\r\n                    <View style={styles.AreaCreatedByUserIsideAPost}>\r\n                      <View style={styles.botaoCreatedByUserIsideAPost2} >\r\n                        <Text style={styles.botaoTextoCreatedByUser}>Assigned to: {this.state.assignUser.firstName}  {this.state.assignUser.lastName}</Text>\r\n                      </View>\r\n                    </View>\r\n                </View>\r\n\r\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width, \r\n                              marginBottom:5, marginTop:1, padding:5}}>\r\n                    <Text style={{fontSize:12, alignSelf:'center'}}>TYPE</Text>\r\n                    <View>\r\n                      <Text style={{fontSize:9, alignSelf:'center'}}> Last Update: </Text>\r\n                      <Text style={{fontSize:11, alignSelf:'center'}}> {(this.state.specificPost.update_time)} </Text>\r\n                    </View>\r\n                    <Text style={{fontSize:12, alignSelf:'center'}}>STATUS</Text>\r\n\r\n                </View>\r\n                {/* ONE POST - TYPE AND AND LAST UPDATE */}\r\n                <View style={{width:Dimensions.get(\"screen\").width, alignItems:'center',justifyContent:'center', flexDirection:'row', \r\n                                justifyContent:'space-between', marginBottom:14, marginTop:5, paddingRight:20, paddingLeft:20, \r\n                                borderBottomWidth:1,borderColor:'#09A6FF', paddingBottom:20}}>\r\n                      <Text style={{backgroundColor:'#6495ED', color:'#FFF', borderRadius:20, fontSize:12, padding:10}}>   {this.state.specificPost.type}   </Text>\r\n                  <View>\r\n\r\n                        {this.state.specificPost.status == 'DONE' ? \r\n                          <Text style={{backgroundColor:'#09A6FF', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text>\r\n                        :\r\n                          this.state.specificPost.status == 'CLOSED' ? \r\n                            <Text style={{backgroundColor:'#fF2f28', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text>\r\n                          :\r\n                            this.state.specificPost.status == 'OPEN' ? \r\n                              <Text style={{backgroundColor:'#32CD32', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text>\r\n\r\n                            :\r\n                              \r\n                              <Text style={{backgroundColor:'#4f55ED', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text>\r\n                        }\r\n                  </View>\r\n                </View>\r\n                {/* ONE POST - DESCRIPTION */}\r\n                <View style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12,  paddingBottom:8, backgroundColor:'#efefef', \r\n                             color:'#000', borderRadius:15, marginLeft:0}}>\r\n                    <Text style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12,  padding:8, backgroundColor:'#efefef', color:'#000',\r\n                    borderRadius:10,marginLeft:14}}>   DESCRIPTION   </Text>\r\n                    <View style={{width:Dimensions.get(\"screen\").width/1.04, alignSelf:'center', borderWidth:0.5, borderColor:'#C0C0C0', backgroundColor:'#FFF', borderRadius:15, marginBottom:12, padding:10}}>\r\n                      <Text style={{fontSize:12, paddingBottom:6, marginLeft:2}}>- {this.state.specificPost.description}</Text>\r\n                    </View>\r\n                  {/* ONE POST - DATE */}\r\n                    <Text style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12, padding:8, paddingTop:0, backgroundColor:'#efefef', color:'#000',\r\n                  borderRadius:10,marginLeft:14}}>   DATE   </Text>\r\n                    <View style={{width:Dimensions.get(\"screen\").width/1.04, alignSelf:'center', borderWidth:0.5, borderColor:'#C0C0C0', backgroundColor:'#FFF', borderRadius:15, marginBottom:5, padding:10}}>\r\n                      <Text style={{fontSize:12, paddingBottom:5, marginLeft:2}}>- {this.state.specificPost.date == null? \"Negotiable\" : format(new Date(this.state.specificPost.date), \"MMMM do, yyyy - H:mma\")}</Text>\r\n                    </View>\r\n                </View>\r\n                {/* TASKS LIST OF ONE POST */}\r\n                <Text style={{alignSelf:'center', fontSize:14, padding:8, backgroundColor:'#FFF', color:'#000', fontWeight:'700', borderTopLeftRadius:10, \r\n                borderTopRightRadius:10, marginLeft:0,marginBottom:1,marginTop:10, shadowRadius: 6, borderRadius: 5,  elevation: 4,shadowColor: '#000',  backgroundColor: '#FFF',\r\n                shadowOffset: {width:0, height: 1}, shadowOpacity: 0.8, width:Dimensions.get(\"screen\").width/1.2}}>   TASKS :  </Text>\r\n                {/* ( {this.state.tasksOfThePost.length} )   </Text> */}\r\n                \r\n\r\n\r\n                <FlatList\r\n                  data={this.state.tasksOfThePost}\r\n                  keyExtractor={item => item.id.toString() }\r\n                  renderItem={ ({item}) => <Tasks data={item} /> }\r\n                />\r\n\r\n\r\n                {/* ONE POST - RETURN BUTTOM */}\r\n                <View style={{alignItems:'center',justifyContent:'center', width:Dimensions.get(\"screen\").width, marginBottom:20, marginTop:-40}}>\r\n                  <TouchableOpacity style={styles.botaoVoltarALista} onPress={()=>this.fcnSpecificPost(id,assignedUserId,false)}>\r\n                    <Text style={{color:'#FF6347', fontSize: 14, margin:3, padding:5}}>Back</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n                \r\n              </View>\r\n            </Modal>\r\n          \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* EDIT POST MODAL */}\r\n          <Modal animationType='slide' visible={this.state.openEditModal}>\r\n\r\n              <View style={styles.specificPostModal}>\r\n\r\n\r\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width, \r\n                              borderBottomWidth:1,borderColor:'#09A6FF', padding:10, marginTop:10}}>\r\n\r\n                  <TouchableOpacity style={styles.botaoSubmitEditSmallred} onPress={()=>this.fcnEditModal(false)}>\r\n                    <Text style={{color:'#f34', fontSize: 10}}>Cancel</Text>\r\n                  </TouchableOpacity>\r\n                  <Text style={{color:'#000', fontSize:20, fontWeight:'700', padding:10}}>EDIT TASK</Text>\r\n                  <TouchableOpacity style={styles.botaoSubmitEditSmallblue} onPress={()=>this.fcnSavePostChanges(id, assignedUserId)}>\r\n                      <Text style={{color:'#09A6FF', fontSize: 11}}>Save</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n              <ScrollView> \r\n\r\n                {/* ONE POST - TITLE */}\r\n                <View style={{alignItems:'center',justifyContent:'space-between', backgroundColor:'#efefef',\r\n                              borderBottomWidth:1,borderColor:'#09A6FF', marginTop:0, padding:10}}>\r\n                    <Text style={{alignSelf:'center', marginLeft:-15, color:'#000', fontSize:12, marginTop:5}}>TITLE</Text>\r\n                    <View style={{alignSelf:'center'}}>\r\n                      <TextInput \r\n                        style={styles.inputsMyTasksTitle}\r\n                        placeholder=\"TITLE\"\r\n                        placeholderTextColor={\"#666\"}\r\n                        underlineColorAndroid=\"transparent\"\r\n                        value={this.state.postTitle}\r\n                        onChangeText={this.setPostTitle}\r\n                        keyboardType={'default'}\r\n                        multiline={true}\r\n                        // onSubmitEditing={() => { this.state.inputEditPostDate.focus() }}\r\n                      />\r\n\r\n                      {/* <View style={{flexDirection:'row', marginLeft:-10,  alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width}}>\r\n                          <Text style={{color:'#000', fontSize:12, margin:2,marginTop:15 }}>TYPE</Text>\r\n                          <Text style={{color:'#000', fontSize:12, margin:2,marginTop:15 }}>STATUS</Text>\r\n                      </View>\r\n\r\n                      <View style={{flexDirection:'row', marginLeft:-10, alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width}}>\r\n                          <View\r\n                            style={{\r\n                                width: Dimensions.get(\"screen\").width/2.1,\r\n                                marginTop: 2,\r\n                                marginBottom:5,\r\n                                borderColor: 'black',\r\n                                borderBottomWidth:1,\r\n                                borderRadius: 10\r\n                            }}>\r\n                            <Picker \r\n                              selectedValue={this.state.postType} \r\n                              value={this.state.postType}\r\n                              onValueChange={(itemValue,itemIndex) => this.setState({postType: itemValue})}\r\n                              style={{color:'#6495ED', paddingTop:5, marginTop:1}}\r\n                              >\r\n                                <Picker.Item key={0} value={0} label=\"DELIVERY\"/>\r\n                                <Picker.Item key={1} value={1} label=\"INSTALLATION\"/>\r\n                                <Picker.Item key={2} value={2} label=\"MANUAL_SERVICES\"/>\r\n                                <Picker.Item key={3} value={3} label=\"OTHER\"/>\r\n                                <Picker.Item key={4} value={4} label=\"REMOVAL\"/>\r\n                            </Picker>\r\n\r\n                          </View>\r\n\r\n                          \r\n                          </View>\r\n                        */}\r\n                        \r\n\r\n                    </View>\r\n\r\n                    \r\n\r\n                </View>\r\n              \r\n               \r\n              \r\n\r\n                {/* ONE POST - DESCRIPTION */}\r\n\r\n                <View style={{width:Dimensions.get(\"screen\").width, alignSelf:'center', fontSize:12,  paddingBottom:5, backgroundColor:'#efefef', \r\n                             color:'#000', borderRadius:0, marginLeft:-10}}>\r\n\r\n                        <View\r\n                          style={{\r\n                              width: Dimensions.get(\"screen\").width/1.5,\r\n                              alignSelf:'center',\r\n                              marginTop: 2,\r\n                              marginBottom:5,\r\n                              borderColor: 'black',\r\n                              borderBottomWidth:1,\r\n                              borderRadius: 10\r\n                          }}>\r\n                          <Picker \r\n                            selectedValue={this.state.postStatus} \r\n                            value={this.state.postStatus}\r\n                            onValueChange={(itemValue,itemIndex) => this.setState({postStatus: itemValue})}\r\n                            style={{color:'#6495ED', paddingTop:5, marginTop:1}}\r\n                            >\r\n                              <Picker.Item key={1} value={1} label=\"CREATED\"/>\r\n                              <Picker.Item key={2} value={2} label=\"OPEN\"/>\r\n                              <Picker.Item key={6} value={6} label=\"CANCELLED\"/>\r\n                          </Picker>\r\n\r\n                        </View>\r\n\r\n                    <Text style={{alignSelf:'center', padding:8, backgroundColor:'#efefef', color:'#000', fontSize:12, marginTop:5, marginLeft:-15}}>   DESCRIPTION   </Text>\r\n\r\n                    <View style={{width:Dimensions.get(\"screen\").width, backgroundColor:'#efefef', marginBottom:0, padding:5}}>\r\n                        <TextInput \r\n                          style={styles.inputsMyTasksBigger}\r\n                          placeholder=\"description\"\r\n                          placeholderTextColor={\"#666\"}\r\n                          underlineColorAndroid=\"transparent\"\r\n                          returnKeyType=\"done\"\r\n                          value={this.state.postDescription}\r\n                          onChangeText={this.setPostDescription}\r\n                          blurOnSubmit={true}\r\n                          onSubmitEditing={()=>{Keyboard.dismiss()}}\r\n                          multiline={true}\r\n                          keyboardType={'default'}\r\n                          // onSubmitEditing={() => { this.state.inputEditPostDate.focus() }}\r\n                          />\r\n                        {/* <Text style={{fontSize:12, paddingBottom:10}}>{this.state.postDescription}</Text> */}\r\n                        {/* ONE POST - DATE */}\r\n                        {/* <Text style={{alignSelf:'center', padding:8, backgroundColor:'#efefef', color:'#000', borderTopLeftRadius:20, \r\n                        borderTopRightRadius:20, fontSize:12, marginLeft:-15}}>   DATE   </Text>\r\n                        <View style={{width:Dimensions.get(\"screen\").width, backgroundColor:'#efefef', marginBottom:12, padding:10, alignItems:'center', justifyContent:'center'}}>\r\n                        <TextInput \r\n                              style={styles.inputOfEditPost}\r\n                              placeholder=\"not editable\"\r\n                              placeholderTextColor={\"#666\"}\r\n                              underlineColorAndroid=\"transparent\"\r\n                              value={this.state.postDate}\r\n                              onChangeText={this.setPostDate}\r\n                              editable={false}\r\n                              // ref={(input) => {this.state.inputEditPostDate = input;}}\r\n                            />\r\n                        </View> */}\r\n                    </View>\r\n                </View>\r\n                          {/* <Text style={{fontSize:12, paddingBottom:10}}>{this.state.specificPost.date == null? \"Open\" : this.state.specificPost.date}</Text> */}\r\n\r\n          \r\n                {/* TASKS LIST OF ONE POST */}\r\n                <KeyboardAvoidingView behavior='padding' style={{alignItems:'center', justifyContent:'center', padding:10, margin:5, marginLeft:-10}}>\r\n\r\n                  <Text style={{backgroundColor:'#FFF', color:'#000', fontSize:12, margin:4,marginBottom:9 }}>INSER NEW SUBTASKS?</Text>\r\n\r\n                  <TextInput \r\n                    style={styles.inputsMyTasks}\r\n                    placeholder=\"new task\"\r\n                    underlineColorAndroid=\"transparent\"\r\n                    onChangeText={this.setTaskTitleWriting}\r\n                    value={this.state.taskTitleWriting}\r\n                    onSubmitEditing={() => { this.state.inputDecriptionInNewSubTask.focus() }}\r\n                  />\r\n                  {/* <Text style={{color:'#000', fontSize:12, margin:3}}>DESCRIPTION:</Text> */}\r\n                  <TextInput \r\n                    style={styles.inputsMyTasksMiddle}\r\n                    placeholder=\"description\"\r\n                    underlineColorAndroid=\"transparent\"\r\n                    returnKeyType=\"done\"\r\n                    onChangeText={this.setTaskDescriptionWriting}\r\n                    value={this.state.taskDescriptionWriting}\r\n                    ref={(input) => {this.state.inputDecriptionInNewSubTask = input;}}\r\n                    blurOnSubmit={true}\r\n                    onSubmitEditing={()=>{Keyboard.dismiss(),this.saveTaskTitleAndDescription()}}\r\n                    multiline={true}\r\n                  />\r\n                  <View style={{alignSelf:'flex-end', marginRight:15, marginBottom:-20}}>\r\n                  <TouchableOpacity style={styles.botaoMyPostSaveTasks} onPress={()=>this.saveTaskTitleAndDescription()}>\r\n                      <Text style={styles.botaoTextoMyPostSaveTasks}>Add</Text>\r\n                  </TouchableOpacity>\r\n\r\n                </View>\r\n\r\n                  <Text style={{color:'#000', fontSize:12, margin:8,marginBottom:9 }}>SAVED TASKS:</Text>\r\n\r\n                {/* </KeyboardAvoidingView>\r\n\r\n\r\n            \r\n                \r\n                <KeyboardAvoidingView style={{borderRadius:10}} behavior='position' ref={(input) => {this.state.showListOfSavedTasks = input;}}> */}\r\n                  {taskTitle.length > 0 ? \r\n                  <View ref={(input) => {this.state.showListOfSavedTasks = input}} \r\n                        style={{justifyContent:'space-around', width:Dimensions.get(\"screen\").width,\r\n                                backgroundColor:'#FFF8DC', alignItems:'center', flexDirection:'row'}}>\r\n                      <View style={{width:Dimensions.get(\"screen\").width/2, alignItems:'flex-start', padding:10, borderRightWidth:1, borderRightColor:'#999'}}>\r\n                        {taskTitle.map((item, key)=>(\r\n                          <Text key={key} style={{color:'#222', height:50, fontSize:16, margin:3}}>{item+\"\\n\"}</Text>))}\r\n                      </View>\r\n                      <View style={{width:Dimensions.get(\"screen\").width/2, alignItems:'flex-start', padding:10}}>\r\n                        {taskDescription.map((item, key)=>(\r\n                          <Text key={key} style={{color:'#222',height:50, fontSize:13, margin:3}}>{item+\"\\n\"}</Text>))}\r\n                      </View>\r\n                  </View>   :  <View></View>\r\n                }\r\n                </KeyboardAvoidingView>\r\n\r\n                </ScrollView>\r\n                \r\n                \r\n              </View>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* MAIN SCREEN OF MY TASKS - LIST OS POSTS*/}\r\n          <View style={styles.card}>\r\n            <View style={styles.botaoCreatedByUser} >\r\n              <Text style={styles.botaoTextoCreatedByUser}>You created this task</Text>\r\n            </View>\r\n             \r\n          <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:10, flexDirection:'row', paddingRight:10,paddingLeft:2, \r\n                justifyContent:'space-between', alignItems:'center'}}>\r\n            <Text style={styles.titulo}>{title}</Text>\r\n              {status == 'OPEN' ? \r\n                <Text style={{backgroundColor:'#32CD32', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n                :\r\n                  status == 'CLOSED' ? \r\n                  <Text style={{backgroundColor:'#fF2f28', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n                  :\r\n                    status=='DONE' ?\r\n                      <Text style={{backgroundColor:'#09A6FF', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n                    :\r\n                        status == 'CANCELLED' ? \r\n                          <Text style={{backgroundColor:'#999', color:'#FFF', borderRadius:20, fontSize:11, padding:5}}>   {status}   </Text>\r\n                        :\r\n                          <Text style={{backgroundColor:'#4f55ED', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n              }\r\n          </View>\r\n          <View style={{marginBottom:12, marginTop:5, flexDirection:'row', justifyContent:'space-between', alignItems:'center', paddingRight:10, paddingBottom:5}}>\r\n              <Text style={styles.texto}>{description}</Text>\r\n              {type == 'MANUAL_SERVICES' ? \r\n                <Text style={{borderWidth:1,borderColor:'#6495ED', color:'#6495ED', borderRadius:20, fontSize:9, padding:4}}>{type}</Text>\r\n              :\r\n                <Text style={{borderWidth:1,borderColor:'#6495ED', color:'#6495ED', borderRadius:20, fontSize:12, padding:4}}>{type}</Text>\r\n              }\r\n          </View>\r\n            <Text style={styles.texto}>Date: {date == null? \"Open\" : format(new Date(date), \"MMMM do, yyyy - H:mma\")}</Text>\r\n            \r\n            {/* <Image\r\n            source={{ uri: foto }}\r\n            style={styles.capa}\r\n            /> */}\r\n\r\n            {status==\"CANCELLED\" ? <View></View> :\r\n                <View style={styles.Areabotao}>\r\n                  <TouchableOpacity style={styles.botao} onPress={()=>this.fcnSpecificPost(id,assignedUserId,true)} >\r\n                    <Text style={styles.botaoTexto}>INFO</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n            }\r\n            {status==\"DONE\" ? \r\n            <View>\r\n                <TouchableOpacity style={{marginBottom:2, marginTop:0,justifyContent:'center', \r\n                                        alignItems:'center', paddingRight:10, paddingBottom:5}}\r\n                                  onPress={()=>this.askToPUTPostToNextStatus(id)}\r\n                                        >\r\n                  <View style={{justifyContent:'center', alignItems:'center'}}>\r\n                    <Text style={{fontSize:14, padding:8, color:'#Fff', fontWeight:'700', borderTopLeftRadius:10, \r\n                        borderTopRightRadius:10, marginLeft:0,marginBottom:1,marginTop:10, shadowRadius: 6, borderRadius: 25,  elevation: 4,shadowColor: '#000',  backgroundColor: '#FF6347',\r\n                      shadowOffset: {width:0, height: 1}, shadowOpacity: 0.8}}>   CLOSE THE TASK  </Text>\r\n                  </View>\r\n\r\n                </TouchableOpacity>\r\n              </View>\r\n            :\r\n            <View>\r\n                    {/* <View style={{marginBottom:2, marginTop:0,justifyContent:'center', backgroundColor:'#FF6347',\r\n                                            alignItems:'center', paddingRight:10, paddingBottom:5}}>\r\n                      <View style={{justifyContent:'center', alignItems:'center'}}>\r\n                        <Text style={{fontSize:14, padding:8, color:'#fff', fontWeight:'700'}}>   CLOSED  </Text>\r\n                      </View>\r\n                    </View> */}\r\n            </View>\r\n\r\n            }\r\n\r\n      </View>\r\n\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n          <Modal animationType='fade' transparent={true} visible={this.state.loadMyPosts} style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\r\n              <View style={{marginTop:200, alignSelf:'center', width:100, height:100, backgroundColor:'#FFf', borderWidth:1, borderColor:'#09A6FF', borderRadius:40}}>\r\n                <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\r\n                  <ActivityIndicator color=\"#09A6FF\" size={30}/>\r\n                  <Text style={{color:'#09A6FF', fontSize:7}}>wait</Text>\r\n                </View>\r\n              </View>\r\n          </Modal>\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n        </ScrollView>\r\n\r\n      )\r\n    };\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card:{\r\n    shadowColor: '#000',\r\n    backgroundColor: '#FFF',\r\n    shadowOffset: {width:0, height: 1},\r\n    shadowOpacity: 0.8,\r\n    margin: 15,\r\n    shadowRadius: 6,\r\n    borderRadius: 5,\r\n    elevation: 4,\r\n  },\r\n  inputOfEditPost:{\r\n    alignSelf:'center',\r\n    backgroundColor:'#FFF',\r\n    borderWidth:0.5,\r\n    width:350,\r\n    height:40,\r\n    padding:5,\r\n    color:'#6495ED',\r\n    borderRadius:10\r\n  },\r\n  specificPostModal:{\r\n    flex:1,\r\n    backgroundColor:'#FFF',\r\n    justifyContent:'flex-start',\r\n    alignItems:'flex-start'\r\n  },\r\n  titulo:{\r\n    width:240,\r\n    fontSize: 18,\r\n    padding: 10\r\n  },\r\n  texto:{\r\n    fontSize: 12,\r\n    padding: 10,\r\n    width:Dimensions.get(\"screen\").width/1.5\r\n  },\r\n  capa:{\r\n    height: 250,\r\n    zIndex: 2,\r\n  },\r\n  Areabotao:{\r\n    alignItems: 'flex-end',\r\n    marginTop: -40,\r\n    zIndex: 9\r\n  },\r\n  botao:{\r\n    width: 100,\r\n    backgroundColor: '#6495ED',\r\n    opacity: 1,\r\n    padding: 10,\r\n    borderTopLeftRadius: 30,\r\n    borderBottomLeftRadius: 5,\r\n\r\n  },\r\n  botaoVoltarALista:{\r\n    width:150,\r\n    borderWidth:1,\r\n    borderColor:'#FF6347',\r\n    marginTop:60,\r\n    padding: 0,\r\n    borderRadius:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n\r\n  },\r\n  \r\n  botaoTexto:{\r\n    textAlign: 'center',\r\n    color: '#FFF',\r\n    fontSize:12\r\n  },\r\n  // AreaCreatedByUser:{\r\n  //   alignItems: 'flex-start',\r\n  //   marginBottom: -2,\r\n  //   zIndex: -9\r\n  // },\r\n  botaoCreatedByUser:{\r\n    width: Dimensions.get(\"screen\").width/2.2,\r\n    backgroundColor: '#6495ED',\r\n    opacity: 1,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    borderBottomRightRadius: 30,\r\n    justifyContent:'flex-start'\r\n  },\r\n  inputsMyTasks:{\r\n    width:350,\r\n    height:50,\r\n    borderWidth:1,\r\n    borderColor:'#000',\r\n    backgroundColor:'#FFF',\r\n    color:'#6495ED',\r\n    borderRadius:10,\r\n    margin:10,\r\n    fontSize:15,\r\n    padding:10\r\n  },\r\n  inputsMyTasksTitle:{\r\n    width:Dimensions.get(\"screen\").width/1.1,\r\n    alignSelf:'center',\r\n    height:60,\r\n    borderWidth:1,\r\n    borderColor:'#888',\r\n    backgroundColor:'#FFF',\r\n    color:'#6495ED',\r\n    borderRadius:10,\r\n    marginTop:5,\r\n    fontSize:18,\r\n    padding:10,\r\n    marginLeft:-5,\r\n    alignContent:'flex-start',\r\n    justifyContent:'flex-start'\r\n  },\r\n  inputsMyTasksMiddle:{\r\n    width:350,\r\n    height:80,\r\n    borderWidth:1,\r\n    borderColor:'#000',\r\n    backgroundColor:'#FFF',\r\n    color:'#6495ED',\r\n    borderRadius:10,\r\n    marginTop:-5,\r\n    fontSize:15,\r\n    padding:10,\r\n    alignContent:'flex-start',\r\n    justifyContent:'flex-start'\r\n  },\r\n  inputsMyTasksBigger:{\r\n    width:350,\r\n    height:100,\r\n    alignSelf:'center',\r\n    borderWidth:1,\r\n    borderColor:'#888',\r\n    backgroundColor:'#FFF',\r\n    color:'#6495ED',\r\n    borderRadius:10,\r\n    fontSize:15,\r\n    marginLeft:-10,\r\n    padding:10,\r\n    alignContent:'flex-start',\r\n    justifyContent:'flex-start'\r\n  },\r\n  botaoMyPostSaveTasks:{\r\n    //width:90,\r\n    backgroundColor:'#2F4F4F',\r\n    marginTop:-25,\r\n    marginBottom:35,\r\n    padding: 7,\r\n    borderRadius:26,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n\r\n  },\r\n  botaoTextoMyPostSaveTasks:{\r\n    textAlign: 'center',\r\n    fontSize:13,\r\n    margin:1,\r\n    color: '#FFF'\r\n  },\r\n  AreaCreatedByUserIsideAPost:{\r\n    alignItems: 'flex-start',\r\n    marginBottom: 10,\r\n    //zIndex:9\r\n  },\r\n  botaoCreatedByUserIsideAPost:{\r\n    width: Dimensions.get(\"screen\").width/2,\r\n    backgroundColor: '#2F4F4F',\r\n    opacity: 1,\r\n    padding: 5,\r\n    paddingBottom:10,\r\n    paddingTop:10,\r\n    paddingLeft:12,\r\n    borderBottomLeftRadius: 5,\r\n    borderBottomRightRadius: 30,\r\n    borderTopRightRadius: 0,\r\n    justifyContent:'flex-start'\r\n  },\r\n  botaoCreatedByUserIsideAPost2:{\r\n    width: Dimensions.get(\"screen\").width/2,\r\n    backgroundColor: '#4f55ED',\r\n    opacity: 1,\r\n    padding: 5,\r\n    paddingBottom:10,\r\n    paddingTop:10,\r\n    paddingLeft:20,\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 5,\r\n    borderTopRightRadius: 0,\r\n    justifyContent:'flex-start'\r\n  },\r\n  botaoTextoCreatedByUser:{\r\n    textAlign: 'left',\r\n    color: '#FFF',\r\n    fontSize:11\r\n  },\r\n\r\n  lastButtomCancelArea:{\r\n    alignItems:'center',\r\n    justifyContent:'center', \r\n    width:Dimensions.get(\"screen\").width, \r\n    borderTopColor:'#FF2f28', \r\n    borderTopWidth:1,\r\n    // backgroundColor:'#FFA07A',\r\n    shadowColor: '#000',\r\n    backgroundColor: '#FFF',\r\n    shadowOffset: {width:0, height: 1},\r\n    shadowOpacity: 0.8,\r\n    elevation:2\r\n  },\r\n  botaoSubmitEdit:{\r\n    width:350,\r\n    borderWidth:1,\r\n    borderColor:'#09A6FF',\r\n    padding: 5,\r\n    borderRadius:10,\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    margin:20\r\n  },\r\n  botaoSubmitEditSmallblue:{\r\n    width:50,\r\n    height:50,\r\n    borderWidth:1,\r\n    borderColor:'#09A6FF',\r\n    padding: 3,\r\n    borderRadius:25,\r\n    marginRight:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  botaoSubmitEditSmallred:{\r\n    width:50,\r\n    height:50,\r\n    borderWidth:1,\r\n    borderColor:'#f34',\r\n    padding: 3,\r\n    borderRadius:25,\r\n    marginRight:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  botaoCancelaEdit:{\r\n    width:200,\r\n    borderWidth:1,\r\n    borderColor:'#FF2f28',\r\n    padding: 0,\r\n    borderRadius:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  }\r\n});\r\n\r\nexport default PostsByUser;","import axios from 'axios';\r\n\r\n//https://sujeitoprogramador.com/r-api/?api=filmes\r\n\r\nconst postApi = axios.create({\r\n  // baseURL: 'http://localhost:8080/'\r\n  // baseURL: 'http://192.168.0.111:8080/'\r\n  // baseURL: 'http://192.168.0.23:8080/'\r\n  // baseURL: 'https://crud-stareng.herokuapp.com/'\r\n\r\n  //baseURL: 'http://192.168.1.11:8080/'\r\n  \r\n  //baseURL: 'https://ola-task.herokuapp.com/'\r\n\r\n  baseURL: 'https://timing-control.herokuapp.com/'\r\n  \r\n});\r\n\r\nexport default postApi;","import React, {Component} from 'react';\r\nimport {View, Text, StyleSheet, Keyboard, Alert, TouchableOpacity, TextInput, Modal, Dimensions, ScrollView} from 'react-native';\r\n\r\nimport postApi from '../PostServices/postApi';\r\n\r\nvar statusArray =[\r\n  \"QUESTIONED\",\r\n  \"CREATED\",\r\n  \"AGREED\",\r\n  \"IN_PROGRESS\",\r\n  \"DONE\"\r\n  // \"NOT_DONE\",\r\n  // \"CANCELLED\"\r\n]\r\n//var placeOfStatus = 1;\r\n\r\nclass Tasks extends Component{\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state = {\r\n        tasksOfThePost: [],\r\n        specificPostModal:false,\r\n        details:false,\r\n        seed:1,\r\n        placeOfStatus:1,\r\n        modalToFinishsubTask:false,\r\n        inputDecriptionToFinishTask:'',\r\n        showCommentsFromApi:true\r\n    };\r\n    this.setPlaceOfStatus = this.setPlaceOfStatus.bind(this);\r\n    this.setInputDecriptionToFinishTask = this.setInputDecriptionToFinishTask.bind(this);\r\n}\r\n\r\nsetPlaceOfStatus(number){   this.setState({placeOfStatus: number}); }\r\nsetInputDecriptionToFinishTask(text){   this.setState({inputDecriptionToFinishTask: text}); }\r\n\r\nsetTaskStatus(status, comments){\r\n  if(this.state.showCommentsFromApi){\r\n    this.setInputDecriptionToFinishTask(comments)\r\n    this.setState({showCommentsFromApi:false})\r\n    \r\n  }\r\n    for(var i = 1; i < statusArray.length; i++) {\r\n      if(statusArray[i]==status){\r\n        this.setPlaceOfStatus(i);\r\n      }\r\n    }\r\n    this.setState({details: !this.state.details});\r\n    // alert(status);\r\n}\r\n\r\naskToGoToNextStatus(id,status){\r\n  // if(statusArray[this.state.placeOfStatus+1] == 'DONE' || status == \"IN_PROGRESS\"){\r\n  //   this.setState({modalToFinishsubTask: true});\r\n  // }else{\r\n    Alert.alert(\r\n      'NEXT STATUS',\r\n      '\\nTake it to the next status?\\n\\n- '+statusArray[this.state.placeOfStatus+1],\r\n      [\r\n        // { text: 'OK', onPress: () => this.setState({newLoginModal:false}) },\r\n        { text: 'OK', onPress: () => this.executeGoToNextStatus(id) },\r\n        { text: 'Cancel' },\r\n      ],\r\n      {cancelable: false},\r\n      );\r\n  // }\r\n\r\n\r\n}\r\n\r\nasync saveDescriptionAndGoToDone(id,title,description,comments,status,start_time,urlPhoto){\r\n  try{\r\n    this.setState({modalToFinishsubTask: false});\r\n    if(comments!=''){\r\n      const newData = \r\n          {\r\n            \"title\": title.toString(),\r\n            \"description\": description.toString(),\r\n            \"comments\": comments.toString(),\r\n            \"status\": status.toString(),\r\n            \"start_time\": start_time.toString(),\r\n            \"urlPhoto\": urlPhoto.toString()\r\n          };\r\n          // const path = 'http://192.168.0.111:8080/tasks/'+id.toString();\r\n          const path = 'https://timing-control.herokuapp.com/tasks/'+id.toString();\r\n          await postApi.put(path,newData);\r\n          this.setState({details: false});\r\n          this.setState({showCommentsFromApi:true})\r\n\r\n          // const getPost = 'http://192.168.0.111:8080/tasks/'+id.toString()+'/next-status';\r\n          const getPost = 'https://timing-control.herokuapp.com/tasks/'+id.toString()+'/next-status';\r\n          // const getPost = 'http://192.168.0.23:8080/tasks/'+id.toString();\r\n          await postApi.put(getPost);\r\n\r\n          this.setPlaceOfStatus(4)\r\n\r\n          \r\n\r\n    }\r\n  }catch(error) {\r\n    Alert.alert(\r\n      'Sorry,',\r\n      'We could not coplete the request.\\n\\nError to uptade -subtaskAssigned.',\r\n      [{ text: 'OK'}],\r\n      {cancelable: false},\r\n    );\r\n    console.log('ERROR: ' + error);\r\n  }\r\n\r\n        \r\n}\r\n\r\nasync executeGoToNextStatus(id) {\r\n  \r\n  try{\r\n\r\n    //const getPost = 'http://192.168.1.11:8080/tasks/'+id.toString()+'/next-status';\r\n    //const getPost = 'https://ola-task.herokuapp.com/tasks/'+id.toString()+'/next-status';\r\n    const getPost = 'https://timing-control.herokuapp.com/tasks/'+id.toString()+'/next-status';\r\n\r\n    await postApi.put(getPost);\r\n\r\n    //this.handleRefreshing();\r\n    if(this.state.placeOfStatus < statusArray.length-1){\r\n      this.setPlaceOfStatus(this.state.placeOfStatus+1)\r\n    }\r\n\r\n  }catch(error) {\r\n    Alert.alert(\r\n      'Sorry,',\r\n      'We could not coplete the request.\\n\\nError to delete -subtaskAssigned.',\r\n      [{ text: 'OK'}],\r\n      {cancelable: false},\r\n    );\r\n    console.log('ERROR: ' + error);\r\n  }\r\n\r\n}\r\n\r\nhandleRefreshing = () => {\r\n  this.setState(\r\n    {\r\n      seed: this.state.seed+1,\r\n    },\r\n    () => {\r\n      if(this.state.placeOfStatus < statusArray.length-1){\r\n        this.setPlaceOfStatus(this.state.placeOfStatus+1)\r\n      }\r\n      \r\n    }\r\n  );\r\n}\r\n\r\n\r\n    render(){\r\n        const { id, title, description, start_time, status, update_time} = this.props.data;\r\n\r\n        return(\r\n            <View style={styles.card}>\r\n              {!this.state.details ? \r\n                <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, flexDirection:'row', \r\n                justifyContent:'space-between', alignItems:'center'}}>\r\n                    <Text style={styles.titulo}>{title}</Text>\r\n                    <Text style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, \r\n                                  fontSize:14, padding:10, marginRight:18, marginBottom:-10}} onPress={()=>this.setTaskStatus(status)}> \r\n                                  Details\r\n                    </Text>\r\n                </View>\r\n              \r\n              :\r\n              <View>\r\n                <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, flexDirection:'row', \r\n                justifyContent:'space-between', alignItems:'center'}}>\r\n                    <Text style={styles.titulo}>{title}</Text>\r\n                    {/* <Text style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, \r\n                                  fontSize:14, padding:10, marginRight:18, marginBottom:-10}}> \r\n                                  {statusArray[this.state.placeOfStatus]}\r\n                                  status\r\n                    </Text> */}\r\n                  {this.state.showCommentsFromApi ? \r\n\r\n                    status==\"DONE\" ? \r\n                        <Text style={{backgroundColor:'#32CD32', color:'#FFF', fontWeight:'700', borderRadius:30, fontSize:15, padding:15, \r\n                        marginRight:20, marginBottom:-25}}>{status}</Text> :\r\n                        <Text style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, fontSize:14, padding:10, \r\n                        marginRight:18, marginBottom:-10}}>{status}</Text>\r\n                    \r\n                    : \r\n\r\n                    this.state.placeOfStatus==4? \r\n                        <Text style={{backgroundColor:'#32CD32', color:'#FFF', fontWeight:'700', borderRadius:30, fontSize:15, padding:15, \r\n                        marginRight:20, marginBottom:-25}}>{statusArray[this.state.placeOfStatus]}</Text> :\r\n                        <Text style={{backgroundColor:'#FFF', color:'#09A6FF', fontWeight:'700', borderRadius:20, fontSize:14, padding:10, \r\n                        marginRight:18, marginBottom:-10}}>{statusArray[this.state.placeOfStatus]}</Text>\r\n                  }\r\n                </View>\r\n                <View style={{flex:1}}>\r\n                  <Text style={{fontSize: 12, padding: 10}}>Description: {description}</Text>\r\n\r\n                </View>\r\n\r\n                <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:8, paddingBottom:10, flexDirection:'row', \r\n                              justifyContent:'space-between', alignItems:'center'}}>\r\n                    <Text style={{fontSize: 12, padding: 10}}>Last Update: {update_time}</Text>\r\n                      {/* {this.state.showCommentsFromApi ? \r\n                          <Text style={{fontSize: 12, padding: 10, width:'50%'}}>Comments: {this.state.inputDecriptionToFinishTask}</Text>\r\n                      : \r\n                          <Text style={{fontSize: 12, padding: 10, width:'50%'}}>Comments: {comments}</Text>\r\n                      } */}\r\n                    <Text></Text>\r\n                    {status == 'DONE' || this.state.placeOfStatus > 3 ? \r\n                      <View></View>\r\n                    :\r\n                      <View>\r\n                        <Text style={{fontSize: 9, padding: 10, paddingRight:30}}>Click to update status:</Text>\r\n                        <TouchableOpacity style={{backgroundColor:'#2F9F4F', borderRadius:15, marginRight:18, marginTop:-0}} \r\n                            onPress={()=>this.askToGoToNextStatus(id,status)}>\r\n                                <Text style={{color:'#fff', fontWeight:'700', padding:7, fontSize:11}}> NEXT STATUS {' >'}</Text>\r\n                        </TouchableOpacity>\r\n                      </View>\r\n                    }\r\n                </View>\r\n              </View>\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* <Modal animationType='slide' transparent={true} visible={this.state.modalToFinishsubTask} style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\r\n                \r\n                <TouchableOpacity   \r\n                transparent={true} style={{height:'62%', width:'100%'}}>\r\n                </TouchableOpacity>\r\n\r\n                <View style={{height:'38%', width:Dimensions.get(\"screen\").width, backgroundColor:'#FFf', borderTopLeftRadius:40, borderTopRightRadius:40}}>\r\n                  <ScrollView style={{flex:1, borderTopLeftRadius:40, borderTopRightRadius:40}}>\r\n                    <View style={{alignSelf:'flex-start', borderTopLeftRadius:30, borderTopRightRadius:30, flexDirection:'row', justifyContent:'space-between', alignItems:'center', width:Dimensions.get(\"screen\").width, \r\n                                  borderBottomWidth:1,backgroundColor:'#2F9F4F', borderColor:'#2F9F4F', padding:5}}>\r\n\r\n                      <Text style={{padding:10, fontSize:17,color:'#fff', fontWeight:'600', width:Dimensions.get(\"screen\").width/1.3}}>Has it been already done?</Text>\r\n                      <TouchableOpacity onPress={ () => this.setState({modalToFinishsubTask:false}) }\r\n                                      style={{width:38, height:38, borderWidth:1, alignItems:'center',\r\n                                      justifyContent:'center',borderColor:'#fff', borderRadius:19, marginRight:15}} >\r\n                        <Text style={{marginTop:0,fontSize:18, fontWeight:'100', color:'#fff'}}> X </Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n\r\n                      {this.state.placeOfStatus==4 ? \r\n                          <Text styles={{alignSelf:'center'}}>This subtask has been done!</Text>\r\n                      :\r\n                          <View style={{alignSelf:'center'}}>\r\n                            <TextInput \r\n                              style={styles.inputsMyTasksBigger}\r\n                              placeholder=\"comments (optional)...\"\r\n                              underlineColorAndroid=\"transparent\"\r\n                              onChangeText={this.setInputDecriptionToFinishTask}\r\n                              blurOnSubmit={true}\r\n                              onSubmitEditing={()=>{Keyboard.dismiss()}}\r\n                              multiline={true}\r\n                            />\r\n                            <Text style={{alignSelf:'center', color:'#000', fontSize:12, margin:3, padding:5, paddingTop:18}}> MESSAGE </Text>\r\n                            <TouchableOpacity style={styles.botaoVoltarALista} onPress={()=>this.saveDescriptionAndGoToDone(id, title, description, this.state.inputDecriptionToFinishTask, \"DONE\", start_time, \"\") } >\r\n                              <Text style={{color:'#32CD32', fontSize: 16, fontWeight:'700', margin:3, padding:3}}>DONE</Text>\r\n                            </TouchableOpacity>\r\n                          </View>\r\n                      }\r\n                  </ScrollView>\r\n\r\n\r\n                </View>\r\n            </Modal> */}\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    card:{\r\n      width:Dimensions.get(\"screen\").width,\r\n      shadowColor: '#000',\r\n      backgroundColor: '#efefef',\r\n      shadowOffset: {width:0, height: 1},\r\n      shadowOpacity: 0.8,\r\n      marginBottom: 12,\r\n      shadowRadius: 6,\r\n      borderRadius: 40,\r\n      elevation: 4,\r\n      padding:10\r\n    },\r\n    specificPostModal:{\r\n      flex:1,\r\n      width:Dimensions.get(\"screen\").width,\r\n      backgroundColor:'#efefef',\r\n      justifyContent:'center',\r\n      alignItems:'center'\r\n    },\r\n    titulo:{\r\n      width: 240,\r\n      fontSize: 17,\r\n      marginLeft:5,\r\n      padding: 5\r\n    },\r\n    capa:{\r\n      height: 250,\r\n      zIndex: 2,\r\n    },\r\n    Areabotao:{\r\n      alignItems: 'flex-end',\r\n      marginTop: -40,\r\n      zIndex: 9\r\n    },\r\n    botao:{\r\n      width: 100,\r\n      backgroundColor: '#09A6FF',\r\n      opacity: 1,\r\n      padding: 10,\r\n      borderTopLeftRadius: 5,\r\n      borderBottomLeftRadius: 5,\r\n  \r\n    },\r\n    botaoVoltarALista:{\r\n      alignSelf:'center',\r\n      width:200,\r\n      borderWidth:1,\r\n      borderColor:'#32CD32',\r\n      marginTop:27,\r\n      padding: 0,\r\n      borderRadius:10,\r\n      alignItems:'center',\r\n      justifyContent:'center'\r\n  \r\n    },\r\n    botaoTexto:{\r\n      textAlign: 'center',\r\n      color: '#FFF'\r\n    },\r\n    inputsMyTasksBigger:{\r\n      width:350,\r\n      height:80,\r\n      borderWidth:1,\r\n      borderColor:'#000',\r\n      color:'#6495ED',\r\n      borderRadius:10,\r\n      margin:10,\r\n      fontSize:15,\r\n      padding:10,\r\n      alignContent:'flex-start',\r\n      justifyContent:'flex-start'\r\n    },\r\n  });\r\n\r\nexport default Tasks;","import React, {Component} from 'react';\r\nimport {View, Text, StyleSheet, Image, FlatList, TouchableOpacity, ActivityIndicator, Modal, Dimensions, Keyboard, ScrollView, Alert, TextInput, KeyboardAvoidingView} from 'react-native';\r\n\r\nimport {Picker} from '@react-native-picker/picker';\r\nimport { format } from \"date-fns\";\r\n\r\nimport postApi from './PostServices/postApi';\r\nimport Tasks from './Tasks';\r\n\r\nvar taskTitle=[];\r\nvar taskDescription=[];\r\nvar userName='';\r\n\r\nclass PostsByAssigned extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      specificPost: [],\r\n      tasksOfThePost: [],\r\n      specificPostModal:false,\r\n      openEditModal:false,\r\n      loadMyPosts: false,\r\n\r\n      postTitle:'',\r\n      postDescription:'',\r\n      postType:'',\r\n      postStatus:'',\r\n      postDate:'',\r\n      //taskTitle: [],\r\n      taskTitleWriting:'',\r\n      //taskDescription: [],\r\n      taskDescriptionWriting:'',\r\n      taskPosition:[],\r\n      modalToFinishsubTask: false,\r\n      assignUser:[]\r\n    };\r\n\r\n    this.setPostTitle = this.setPostTitle.bind(this);\r\n    this.setPostDescription = this.setPostDescription.bind(this);\r\n    this.setPostType = this.setPostType.bind(this);\r\n    this.setPostStatus = this.setPostStatus.bind(this);\r\n    this.setPostDate = this.setPostDate.bind(this);\r\n\r\n    this.setTaskTitleWriting = this.setTaskTitleWriting.bind(this);\r\n    this.setTaskDescriptionWriting = this.setTaskDescriptionWriting.bind(this);\r\n    this.setTaskPosition = this.setTaskPosition.bind(this);\r\n    \r\n\r\n  }\r\n\r\n  setPostTitle(text){    this.setState({postTitle: text});  }\r\n  setPostDescription(text){    this.setState({postDescription: text});  }\r\n  setPostType(text){    this.setState({setPostType: text});  }\r\n  setPostStatus(text){    this.setState({postStatus: text});  }\r\n  setPostDate(text){    this.setState({postDate: text});  }\r\n  setShowAllSubTasks(visibility){    this.setState({showAllSubTasks: visibility});  }\r\n  setTaskTitleWriting(text){    this.setState({taskTitleWriting: text});  }\r\n  setTaskDescriptionWriting(text){    this.setState({taskDescriptionWriting: text});  }\r\n  setTaskPosition(text){    this.setState({taskPosition: text});  }\r\n\r\n\r\n  askToPUTPostToNextStatus(postId){\r\n\r\n    Alert.alert(\r\n      'DONE',\r\n      '\\nFinish this task?\\n\\nYou will not be able to change it later',\r\n      [\r\n        // { text: 'OK', onPress: () => this.setState({newLoginModal:false}) },\r\n        { text: 'OK', onPress: () => this.executePostToNextStatus(postId) },\r\n        { text: 'Cancel', style:'cancel' },\r\n      ],\r\n      {cancelable: false},\r\n    ); \r\n\r\n  }\r\n\r\n  async executePostToNextStatus(postId){\r\n    this.setState({loadMyPosts: true});\r\n    try{\r\n\r\n      await postApi.put('posts/'+postId.toString()+'/next-status');\r\n      \r\n      this.setPostStatus('DONE')\r\n\r\n      Alert.alert(\r\n        'CONGRATS,',\r\n        '\\nWe have sent the information to the task owner.\\n\\nPlease, update your list to check its new status',\r\n        [{ text: 'OK', onPress: ()=>this.setState({loadMyPosts: false,specificPostModal:false})}],\r\n        {cancelable: false},\r\n      );\r\n      \r\n      this.setState({loadMyPosts: false,specificPostModal:false})\r\n      \r\n    }catch(error) {\r\n      this.setState({loadMyPosts: false});\r\n      this.setState({specificPostModal:false})\r\n      Alert.alert(\r\n        'Sorry,',\r\n        'We could not coplete the request.\\n\\nIt will be fixed soon.',\r\n        [{ text: 'OK'}],\r\n        {cancelable: false},\r\n      );\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n  async fcnSpecificPost(postId,assignedUserId, visibility){\r\n\r\n    this.setState({loadMyPosts: true});\r\n    // if(visibility){\r\n      try{\r\n          const getPost = 'posts/'+postId.toString();\r\n          const response = await postApi.get(getPost);\r\n          this.setState({\r\n            specificPost: response.data,\r\n            loading: false\r\n          });\r\n          \r\n\r\n          const getTasksOfPost = 'tasks/get-by-post-id/'+postId.toString();\r\n          const responsetasks = await postApi.get(getTasksOfPost);\r\n          this.setState({\r\n            tasksOfThePost: responsetasks.data,\r\n            loading: false\r\n          });\r\n          // userName = this.state.specificPost.user.name.toString();\r\n          userName = this.state.specificPost.user_name.toString();\r\n\r\n          //Bring Assigned User\r\n          if(assignedUserId!=null){\r\n            const responseAssignedUser = await postApi.get('users/'+assignedUserId.toString());\r\n            this.setState({\r\n              assignUser: responseAssignedUser.data,\r\n            });\r\n          }\r\n\r\n          this.setState({specificPostModal:visibility})\r\n          \r\n      }catch(error) {\r\n        this.setState({specificPostModal:false})\r\n        Alert.alert(\r\n          'Sorry,',\r\n          'We could not coplete the request.\\n\\nPlease, check your device status connections.',\r\n          [{ text: 'OK'}],\r\n          {cancelable: false},\r\n        );\r\n        console.log('ERROR: ' + error);\r\n      }\r\n      // alert('user: '+ this.state.specificPost.user.firstName.toString())\r\n    // }else{\r\n    //   this.setState({specificPostModal:visibility})\r\n    // }\r\n    taskTitle=[];\r\n    taskDescription=[];\r\n    this.setState({loadMyPosts: false});\r\n    \r\n  }\r\n\r\n  fcnCheckOptions(){\r\n    Alert.alert(\r\n      'OPTIONS:',\r\n      'You would like to edit this task?',\r\n      [\r\n        { text: 'Edit  ', onPress: () => this.OpenEditModal()  },\r\n        { text: '  Cancel', onPress: () => this.setState({openEditModal:false}), style:'cancel' },\r\n      ],\r\n      {cancelable: false},\r\n    );\r\n\r\n  }\r\n\r\n   fcnEditModal(visibility){\r\n     // Cleaning tasks_aux\r\n    // for(var i = 0; i < taskTitle.length; i++) {\r\n    //   taskTitle.pop();\r\n    //   taskDescription.pop();\r\n    // }\r\n    taskTitle=[];\r\n    taskDescription=[];\r\n    this.setState({openEditModal:visibility})\r\n  }\r\n\r\n  async OpenEditModal(){\r\n    // this.setState({openEditModal:true});\r\n    try{\r\n\r\n      for(var i = 0; i < this.state.tasksOfThePost.length; i++) {\r\n        taskTitle.push(this.state.tasksOfThePost[i].title);\r\n        taskDescription.push(this.state.tasksOfThePost[i].description);\r\n      }\r\n\r\n\r\n      this.setState({\r\n        postTitle:this.state.specificPost.title,\r\n        postDescription:this.state.specificPost.description,\r\n        postType:this.state.specificPost.type,\r\n        postStatus:this.state.specificPost.status,\r\n        postDate:this.state.specificPost.date,\r\n        taskTitleWriting:'',\r\n        taskDescriptionWriting:'',\r\n\r\n        openEditModal:true\r\n      })\r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n\r\n    //this.setState({openEditModal:true})\r\n  }\r\n\r\n  saveTaskTitleAndDescription(){\r\n      \r\n    try{\r\n      if(this.state.taskTitleWriting!=\"\" && this.state.taskDescriptionWriting!=\"\"){\r\n        // const finalNewText = (taskTitle.length+1).toString()+\". \"+ this.state.taskTitleWriting;\r\n        const finalNewText = this.state.taskTitleWriting;\r\n        taskTitle.push(finalNewText);\r\n        taskDescription.push(this.state.taskDescriptionWriting);\r\n        this.setTaskTitleWriting(\"\");\r\n        this.setTaskDescriptionWriting(\"\");\r\n      }else{\r\n        Alert.alert(\r\n          'Incorrect',\r\n          'Prease, check if the task or its description is empty and try again.',\r\n          [\r\n            { text: 'OK', onPress: () => ({}) }\r\n          ],\r\n          {cancelable: false},\r\n        );\r\n      }\r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n}\r\n\r\n  setTaskTitle(text){\r\n    try{\r\n      if(text!=\"\"){\r\n        taskTitle.push(text);\r\n      }\r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n  setTaskDescription(text){\r\n    try{\r\n      if(text!=\"\"){\r\n        taskDescription.push(text);\r\n      }\r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n  fcnSavePostChanges(id, assignedUserId){\r\n    try{\r\n        Alert.alert(\r\n          'SAVE CHANGES',\r\n          'Are you sure you want to save the changes for this task?',\r\n          [\r\n            // { text: 'OK', onPress: () => this.setState({subTasksModal:true}) },\r\n            { text: 'OK', onPress: () => this.SavePostChanges(id, assignedUserId) },\r\n            { text: 'Cancel', onPress: () => this.fcnEditModal(false), style:'cancel' },\r\n          ],\r\n          {cancelable: false},\r\n        );\r\n      \r\n    }catch(error) {\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n  async SavePostChanges(id, assignedUserId){\r\n    \r\n    try{\r\n      this.setState({loadMyPosts: true});\r\n        const newData = \r\n        {\r\n          \"title\": this.state.postTitle,\r\n          \"description\": this.state.postDescription,\r\n          \"type\": this.state.postType,\r\n          \"status\": this.state.postStatus\r\n        };\r\n        const updatePostPath = 'posts/'+(id.toString());\r\n        await postApi.put(updatePostPath,newData);\r\n\r\n        const numberOfTasksInit= this.state.tasksOfThePost.length;\r\n        const numberOfTasksend= taskTitle.length;\r\n        if(numberOfTasksInit < numberOfTasksend){\r\n          for(var i = numberOfTasksInit; i < numberOfTasksend; i++) {\r\n              const newTaskData = \r\n              {\r\n                \"title\": taskTitle[i],\r\n                \"description\": taskDescription[i],\r\n                \"post\": {\"id\": id.toString()}\r\n              };\r\n              await postApi.post('tasks',newTaskData);\r\n            \r\n          }\r\n        }\r\n\r\n        //cleaning task_aux\r\n        // for(var i = 0; i < taskTitle.length; i++) {\r\n        //   taskTitle.pop();\r\n        //   taskDescription.pop();\r\n        // }\r\n        taskTitle=[];\r\n        taskDescription=[];\r\n\r\n        //Check final pages (what will be opened or not)\r\n        this.fcnSpecificPost(id,assignedUserId,true);\r\n\r\n        this.setState({loadMyPosts: false});\r\n        this.setState({openEditModal: false});\r\n        this.setState({specificPostModal: false});\r\n      // this.setState({subTasksModal:true})\r\n\r\n    }catch(error) {\r\n      this.setState({loadMyPosts: false});\r\n      alert('Api connection error. Please, try again soon. Post '+(id.toString()))\r\n      console.log('ERROR: ' + error);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n   \r\n  render(){\r\n\r\n    const { id, title, description, type, date, status, assignedUserId } = this.props.data;\r\n    if(this.state.loading){\r\n      return(\r\n        <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\r\n          <ActivityIndicator color=\"#09A6FF\" size={40}/>\r\n        </View>\r\n      )\r\n    }else{\r\n      return(\r\n        <ScrollView>\r\n\r\n\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* INSIDE ONE POST MODAL */}\r\n            <Modal animationType='slide' visible={this.state.specificPostModal}>\r\n              <View style={styles.specificPostModal}>\r\n                {/* ONE POST - TITLE */}\r\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-between', width:Dimensions.get(\"screen\").width, \r\n                              borderBottomWidth:1,borderColor:'#09A6FF', marginBottom:0, marginTop:15, padding:5}}>\r\n                  <TouchableOpacity onPress={()=>this.fcnSpecificPost(id,assignedUserId,false)} \r\n                                  style={{width:38, height:38, borderWidth:1, alignItems:'center',\r\n                                  justifyContent:'center',borderColor:'#fF2f28', borderRadius:19, marginLeft:5}} >\r\n                    <Text style={{marginTop:0, fontSize:10, color:'#FF2f28'}}>Back</Text>\r\n                  </TouchableOpacity>\r\n                  <Text style={{alignSelf:'center',padding:10, fontSize:20, fontWeight:'600', width:Dimensions.get(\"screen\").width/1.3}}>{this.state.specificPost.title}</Text>\r\n\r\n                </View>\r\n                <View style={{flexDirection:'row', justifyContent:'space-between', width:Dimensions.get(\"screen\").width}}>\r\n                    <View style={styles.AreaCreatedByUserIsideAPost}>\r\n                      <View style={styles.botaoCreatedByUserIsideAPost} >\r\n                        <Text style={styles.botaoTextoCreatedByUser}>Created by: {userName}</Text>\r\n                      </View>\r\n                    </View>\r\n                    <View style={styles.AreaCreatedByUserIsideAPost}>\r\n                      <View style={styles.botaoCreatedByUserIsideAPost2} >\r\n                        <Text style={styles.botaoTextoCreatedByUser}>Assigned to: {this.state.assignUser.firstName}  {this.state.assignUser.lastName}</Text>\r\n                      </View>\r\n                    </View>\r\n                </View>\r\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width, \r\n                              marginBottom:5, marginTop:1, padding:5}}>\r\n                    <Text style={{fontSize:12, alignSelf:'center'}}>TYPE</Text>\r\n                    <View>\r\n                      <Text style={{fontSize:9, alignSelf:'center'}}> Last Update: </Text>\r\n                      <Text style={{fontSize:11, alignSelf:'center'}}> {(this.state.specificPost.update_time)} </Text>\r\n                    </View>\r\n                    <Text style={{fontSize:12, alignSelf:'center'}}>STATUS</Text>\r\n\r\n                </View>\r\n                {/* ONE POST - TYPE AND AND LAST UPDATE */}\r\n                <View style={{width:Dimensions.get(\"screen\").width, alignItems:'center',justifyContent:'center', flexDirection:'row', \r\n                                justifyContent:'space-between', marginBottom:14, marginTop:5, paddingRight:20, paddingLeft:15, \r\n                                borderBottomWidth:1,borderColor:'#09A6FF', paddingBottom:20}}>\r\n                  <Text style={{backgroundColor:'#6495ED', color:'#FFF', borderRadius:20, fontSize:12, padding:10}}>   {this.state.specificPost.type}   </Text>\r\n                  <View>\r\n                  {this.state.specificPost.status == 'DONE' ? \r\n                    <Text style={{backgroundColor:'#09A6FF', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text>\r\n                  :\r\n                    status == 'CLOSED' ? \r\n                      <Text style={{backgroundColor:'#fF2f28', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text>\r\n                    :\r\n                      <Text style={{backgroundColor:'#4f55ED', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {this.state.specificPost.status}   </Text>\r\n                  }\r\n                  \r\n                  </View>\r\n                </View>\r\n                {/* ONE POST - DESCRIPTION */}\r\n                <View style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12,  paddingBottom:8, backgroundColor:'#efefef', \r\n                             color:'#000', borderRadius:15, marginLeft:0}}>\r\n                    <Text style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12,  padding:8, backgroundColor:'#efefef', color:'#000',\r\n                    borderRadius:10,marginLeft:14}}>   DESCRIPTION   </Text>\r\n                    <View style={{width:Dimensions.get(\"screen\").width/1.04, alignSelf:'center', borderWidth:0.5, borderColor:'#C0C0C0', backgroundColor:'#FFF', borderRadius:15, marginBottom:12, padding:10}}>\r\n                      <Text style={{fontSize:12, paddingBottom:6, marginLeft:2}}>- {this.state.specificPost.description}</Text>\r\n                    </View>\r\n                  {/* ONE POST - DATE */}\r\n                    <Text style={{alignSelf:'center',width:Dimensions.get(\"screen\").width, fontSize:12, padding:8, paddingTop:0, backgroundColor:'#efefef', color:'#000',\r\n                  borderRadius:10,marginLeft:14}}>   DATE   </Text>\r\n                    <View style={{width:Dimensions.get(\"screen\").width/1.04, alignSelf:'center', borderWidth:0.5, borderColor:'#C0C0C0', backgroundColor:'#FFF', borderRadius:15, marginBottom:5, padding:10}}>\r\n                      <Text style={{fontSize:12, paddingBottom:5, marginLeft:2}}>- {this.state.specificPost.date == null? \"Negotiable\" : format(new Date(this.state.specificPost.date), \"MMMM do, yyyy - H:mma\")}</Text>\r\n                    </View>\r\n                </View>\r\n                {/* TASKS LIST OF ONE POST */}\r\n                <Text style={{alignSelf:'center', fontSize:14, padding:8, backgroundColor:'#FFF', color:'#000', fontWeight:'700', borderTopLeftRadius:10, \r\n                borderTopRightRadius:10, marginLeft:0,marginBottom:1,marginTop:10, shadowRadius: 6, borderRadius: 5,  elevation: 4,shadowColor: '#000',  backgroundColor: '#FFF',\r\n                shadowOffset: {width:0, height: 1}, shadowOpacity: 0.8, width:Dimensions.get(\"screen\").width/1.2}}>   TASKS ( {this.state.tasksOfThePost.length} )   </Text>\r\n                <FlatList\r\n                  data={this.state.tasksOfThePost}\r\n                  keyExtractor={item => item.id.toString() }\r\n                  renderItem={ ({item}) => <Tasks data={item} /> }\r\n                />\r\n\r\n                {/* ONE POST - RETURN BUTTOM */}\r\n                {this.state.specificPost.status=='DONE' || this.state.specificPost.status=='CLOSED' ? \r\n                  <View></View>\r\n                :\r\n                  <View style={{alignItems:'center',justifyContent:'center', width:Dimensions.get(\"screen\").width, marginBottom:20, marginTop:0}}>\r\n                    <TouchableOpacity style={styles.botaoVoltarALista} \r\n                    onPress={()=>this.askToPUTPostToNextStatus(id)}\r\n                    // onPress={()=>this.setState({modalToFinishsubTask:true})}\r\n                    >\r\n                      <Text style={{color:'#32CD32', fontSize: 16, fontWeight:'700', margin:3, padding:3}}>DONE</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                }\r\n                \r\n              </View>\r\n            </Modal>\r\n          \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/*   EDIT POST MODAL   */}\r\n\r\n          \r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* MAIN SCREEN OF MY TASKS - LIST OS POSTS*/}\r\n          <View style={styles.card}>\r\n          <View style={styles.AreaCreatedByUser}>\r\n                <View style={styles.botaoCreatedByUser} >\r\n                  <Text style={styles.botaoTextoCreatedByUser}>Assigned to me</Text>\r\n                </View>\r\n              </View>\r\n          <View style={{borderBottomWidth:0.5,borderColor:'#09A6FF', marginBottom:10, flexDirection:'row', paddingRight:8,paddingLeft:2, \r\n                justifyContent:'space-between', alignItems:'center'}}>\r\n            <Text style={styles.titulo}>{title}</Text>\r\n              {status == 'DONE' ? \r\n                  <Text style={{backgroundColor:'#09A6FF', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n              :\r\n                status == 'CLOSED' ? \r\n                 <Text style={{backgroundColor:'#fF2f28', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n                :\r\n                \r\n                  <Text style={{backgroundColor:'#4f55ED', color:'#FFF', borderRadius:20, fontSize:13, padding:5}}>   {status}   </Text>\r\n\r\n              }\r\n          </View>\r\n          <View style={{marginBottom:12, marginTop:5, flexDirection:'row', justifyContent:'space-between', alignItems:'center', paddingRight:10, paddingBottom:5}}>\r\n              <Text style={styles.texto}>{description}</Text>\r\n              {type == 'MANUAL_SERVICES' ? \r\n                <Text style={{borderWidth:1,borderColor:'#6495ED', color:'#6495ED', borderRadius:20, fontSize:9, padding:4}}>{type}</Text>\r\n              :\r\n                <Text style={{borderWidth:1,borderColor:'#6495ED', color:'#6495ED', borderRadius:20, fontSize:12, padding:4}}>{type}</Text>\r\n              }\r\n          </View>\r\n            <Text style={styles.texto}>Date: {date == null? \"Open\" : format(new Date(date), \"MMMM do, yyyy - H:mma\")}</Text>\r\n            \r\n            {/* <Image\r\n            source={{ uri: foto }}\r\n            style={styles.capa}\r\n            /> */}\r\n\r\n            {status==\"CANCELLED\" ? <View></View> :\r\n                <View style={styles.Areabotao}>\r\n                  <TouchableOpacity style={styles.botao} onPress={()=>this.fcnSpecificPost(id,assignedUserId,true)} >\r\n                    <Text style={styles.botaoTexto}>INFO</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n            }\r\n\r\n          </View>\r\n\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/* <Modal animationType='slide' transparent={true} visible={this.state.modalToFinishsubTask} style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\r\n            \r\n            <TouchableOpacity  onPress={ () => this.setState({modalToFinishsubTask:false}) }\r\n            transparent={true} style={{height:'65%', width:'100%'}}>\r\n            </TouchableOpacity>\r\n\r\n            <View style={{height:'35%', width:Dimensions.get(\"screen\").width, backgroundColor:'#FFf', borderWidth:1, borderColor:'#09A6FF', borderTopLeftRadius:40, borderTopRightRadius:40}}>\r\n              <View style={{flex:1, borderTopLeftRadius:40, borderTopRightRadius:40}}>\r\n                <View style={{alignSelf:'flex-start', borderTopLeftRadius:30, borderTopRightRadius:30, flexDirection:'row', justifyContent:'space-between', alignItems:'center', width:Dimensions.get(\"screen\").width, \r\n                              borderBottomWidth:1,backgroundColor:'#09A6FF', borderColor:'#09A6FF', padding:5}}>\r\n\r\n                  <Text style={{padding:10, fontSize:18,color:'#fff', fontWeight:'600', width:Dimensions.get(\"screen\").width/1.3}}>Finish this task?</Text>\r\n                  <TouchableOpacity onPress={ () => this.setState({modalToFinishsubTask:false}) }\r\n                                  style={{width:38, height:38, borderWidth:1, alignItems:'center',\r\n                                  justifyContent:'center',borderColor:'#fff', borderRadius:19, marginRight:15}} >\r\n                    <Text style={{marginTop:0,fontSize:15, fontWeight:'200', color:'#fff'}}> X </Text>\r\n                  </TouchableOpacity>\r\n\r\n                </View>\r\n\r\n              </View>\r\n            </View>\r\n        </Modal> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n\r\n\r\n        <Modal animationType='fade' transparent={true} visible={this.state.loadMyPosts} style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\r\n            <View style={{marginTop:200, alignSelf:'center', width:100, height:100, backgroundColor:'#FFf', borderWidth:1, borderColor:'#09A6FF', borderRadius:40}}>\r\n              <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\r\n                <ActivityIndicator color=\"#09A6FF\" size={30}/>\r\n                <Text style={{color:'#09A6FF', fontSize:7}}>wait</Text>\r\n              </View>\r\n            </View>\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n {/* ------------------------------------------------------------------------------------------------------------------------------- */}\r\n\r\n\r\n        </ScrollView>\r\n\r\n      )\r\n    };\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card:{\r\n    shadowColor: '#000',\r\n    backgroundColor: '#FFF',\r\n    shadowOffset: {width:0, height: 1},\r\n    shadowOpacity: 0.8,\r\n    margin: 15,\r\n    shadowRadius: 6,\r\n    borderRadius: 5,\r\n    elevation: 4,\r\n  },\r\n  inputOfEditPost:{\r\n    backgroundColor:'#FFF',\r\n    borderWidth:0.5,\r\n    width:350,\r\n    height:40,\r\n    padding:5,\r\n    color:'#6495ED',\r\n    borderRadius:10\r\n  },\r\n  specificPostModal:{\r\n    flex:1,\r\n    backgroundColor:'#FFF',\r\n    justifyContent:'flex-start',\r\n    alignItems:'flex-start'\r\n  },\r\n  titulo:{\r\n    width:240,\r\n    fontSize: 18,\r\n    padding: 10\r\n  },\r\n  texto:{\r\n    fontSize: 12,\r\n    padding: 10,\r\n    width:Dimensions.get(\"screen\").width/1.5\r\n  },\r\n  capa:{\r\n    height: 250,\r\n    zIndex: 2,\r\n  },\r\n  Areabotao:{\r\n    alignItems: 'flex-end',\r\n    marginTop: -40,\r\n    zIndex: 9\r\n  },\r\n  botao:{\r\n    width: 100,\r\n    backgroundColor: '#6f6fff',\r\n    opacity: 1,\r\n    padding: 10,\r\n    borderTopLeftRadius: 30,\r\n    borderBottomLeftRadius: 5,\r\n\r\n  },\r\n  botaoVoltarALista:{\r\n    width:150,\r\n    borderWidth:3,\r\n    borderColor:'#32CD32',\r\n    marginTop:5,\r\n    padding: 0,\r\n    borderRadius:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n\r\n  },\r\n  \r\n  botaoTexto:{\r\n    textAlign: 'center',\r\n    color: '#FFF',\r\n    fontSize:12\r\n  },\r\n  inputsMyTasks:{\r\n    width:350,\r\n    height:50,\r\n    borderWidth:1,\r\n    borderColor:'#000',\r\n    backgroundColor:'#FFF',\r\n    color:'#6495ED',\r\n    borderRadius:10,\r\n    margin:10,\r\n    fontSize:15,\r\n    padding:10\r\n  },\r\n  inputsMyTasksTitle:{\r\n    width:Dimensions.get(\"screen\").width/1.1,\r\n    height:80,\r\n    borderWidth:1,\r\n    borderColor:'#000',\r\n    backgroundColor:'#FFF',\r\n    color:'#6495ED',\r\n    borderRadius:10,\r\n    marginTop:-5,\r\n    fontSize:18,\r\n    padding:10,\r\n    alignContent:'flex-start',\r\n    justifyContent:'flex-start'\r\n  },\r\n  inputsMyTasksMiddle:{\r\n    width:350,\r\n    height:80,\r\n    borderWidth:1,\r\n    borderColor:'#000',\r\n    backgroundColor:'#FFF',\r\n    color:'#6495ED',\r\n    borderRadius:10,\r\n    marginTop:-5,\r\n    fontSize:15,\r\n    padding:10,\r\n    alignContent:'flex-start',\r\n    justifyContent:'flex-start'\r\n  },\r\n  inputsMyTasksBigger:{\r\n    width:350,\r\n    height:110,\r\n    borderWidth:1,\r\n    borderColor:'#000',\r\n    backgroundColor:'#FFF',\r\n    color:'#6495ED',\r\n    borderRadius:10,\r\n    margin:10,\r\n    fontSize:15,\r\n    padding:10,\r\n    alignContent:'flex-start',\r\n    justifyContent:'flex-start'\r\n  },\r\n  botaoMyPostSaveTasks:{\r\n    width:200,\r\n    backgroundColor:'#32CD32',\r\n    marginTop:20,\r\n    marginBottom:10,\r\n    padding: 8,\r\n    borderRadius:8,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  botaoTextoMyPostSaveTasks:{\r\n    textAlign: 'center',\r\n    fontSize:13,\r\n    margin:2,\r\n    color: '#FFF'\r\n  },\r\n  AreaCreatedByUser:{\r\n    alignItems: 'flex-start',\r\n    marginBottom: -2,\r\n    zIndex: -9\r\n  },\r\n  botaoCreatedByUser:{\r\n    width: Dimensions.get(\"screen\").width/2.2,\r\n    backgroundColor: '#6f6fff',\r\n    opacity: 1,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n    borderBottomRightRadius: 30,\r\n    justifyContent:'flex-start'\r\n  },\r\n  botaoTextoCreatedByUser:{\r\n    textAlign: 'left',\r\n    color: '#FFF',\r\n    fontSize:11\r\n  },\r\n  AreaCreatedByUserIsideAPost:{\r\n    alignItems: 'flex-start',\r\n    marginBottom: 10,\r\n    //zIndex:9\r\n  },\r\n  botaoCreatedByUserIsideAPost:{\r\n    width: Dimensions.get(\"screen\").width/2,\r\n    backgroundColor: '#2F4F4F',\r\n    opacity: 1,\r\n    padding: 5,\r\n    paddingBottom:10,\r\n    paddingTop:10,\r\n    paddingLeft:12,\r\n    borderBottomLeftRadius: 5,\r\n    borderBottomRightRadius: 30,\r\n    borderTopRightRadius: 0,\r\n    justifyContent:'flex-start'\r\n  },\r\n  botaoCreatedByUserIsideAPost2:{\r\n    width: Dimensions.get(\"screen\").width/2,\r\n    backgroundColor: '#4f55ED',\r\n    opacity: 1,\r\n    padding: 5,\r\n    paddingBottom:10,\r\n    paddingTop:10,\r\n    paddingLeft:20,\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 5,\r\n    borderTopRightRadius: 0,\r\n    justifyContent:'flex-start'\r\n  },\r\n\r\n  lastButtomCancelArea:{\r\n    alignItems:'center',\r\n    justifyContent:'center', \r\n    width:Dimensions.get(\"screen\").width, \r\n    borderTopColor:'#FF2f28', \r\n    borderTopWidth:1,\r\n    // backgroundColor:'#FFA07A',\r\n    shadowColor: '#000',\r\n    backgroundColor: '#FFF',\r\n    shadowOffset: {width:0, height: 1},\r\n    shadowOpacity: 0.8,\r\n    elevation:2\r\n  },\r\n  botaoSubmitEdit:{\r\n    width:350,\r\n    borderWidth:1,\r\n    borderColor:'#09A6FF',\r\n    padding: 5,\r\n    borderRadius:10,\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n    margin:20\r\n  },\r\n  botaoSubmitEditSmallblue:{\r\n    width:50,\r\n    height:50,\r\n    borderWidth:1,\r\n    borderColor:'#09A6FF',\r\n    padding: 3,\r\n    borderRadius:25,\r\n    marginRight:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  botaoSubmitEditSmallred:{\r\n    width:50,\r\n    height:50,\r\n    borderWidth:1,\r\n    borderColor:'#f34',\r\n    padding: 3,\r\n    borderRadius:25,\r\n    marginRight:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  },\r\n  botaoCancelaEdit:{\r\n    width:200,\r\n    borderWidth:1,\r\n    borderColor:'#FF2f28',\r\n    padding: 0,\r\n    borderRadius:10,\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n  }\r\n});\r\n\r\nexport default PostsByAssigned;","import React, { Component } from 'react';\nimport { View, Text, StyleSheet,TouchableOpacity, FlatList, TextInput, Keyboard, ActivityIndicator, Modal, ScrollView, Alert, Dimensions, Linking } from 'react-native';\n//import ReversedFlatList from 'react-native-reversed-flat-list';\n\nimport api from './src/services/api';\nimport Posts from './src/Pages/PostsPage/Posts';\nimport PostsByUser from './src/Pages/PostsPage/PostsByUser';\nimport PostsByAssigned from './src/Pages/PostsPage/PostsByAssigned';\nimport {Picker} from '@react-native-picker/picker';\n\nvar taskTitle=[];\nvar taskDescription=[];\nvar user=[];\nvar StrStatus='none';\nvar StrType='none';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n\n      posts: [],\n      postsByUser: [],\n      loading: false,\n      loadMyPosts: false,\n      entryModal:true,\n      newLoginModal:false,\n      myPostsModal:false,\n      subTasksModal:false,\n      MyOwnPosted:false,\n      assignedPostsModal:false,\n      showAllSubTasks:false,\n      showOptionsForMyTask:false,\n      seed:1,\n      email:'',\n      password:'',\n      postTitle:'',\n      postDescription:'',\n      postAssignedUser:'',\n      postType:'',\n      taskTitleWriting:'',\n      taskDescriptionWriting:'',\n      newLoginFirstName:'',\n      newLoginLastName:'',\n      newLoginEmail:'',\n      newLoginPassword:'',\n      newLoginPassword2:'',\n      newLoginPhone:'',\n      createdPostID:'',\n      userID:'',\n      userName:'',\n      userProjectId:''\n    };\n    this.setEmail = this.setEmail.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n\n    this.setPostTitle = this.setPostTitle.bind(this);\n    this.setPostDescription = this.setPostDescription.bind(this);\n    this.setPostAssignedUser = this.setPostAssignedUser.bind(this);\n    this.setPostType = this.setPostType.bind(this);\n\n    this.setTaskTitleWriting = this.setTaskTitleWriting.bind(this);\n    this.setTaskDescriptionWriting = this.setTaskDescriptionWriting.bind(this);\n\n    this.setNewLoginFirstName = this.setNewLoginFirstName.bind(this);\n    this.setNewLoginLastName = this.setNewLoginLastName.bind(this);\n    this.setNewLoginEmail = this.setNewLoginEmail.bind(this);\n    this.setNewLoginPassword = this.setNewLoginPassword.bind(this);\n    this.setNewLoginPassword2 = this.setNewLoginPassword2.bind(this);\n    this.setNewLoginPhone = this.setNewLoginPhone.bind(this);\n\n    this.setCreatedPostID = this.setCreatedPostID.bind(this);\n    this.setUserID = this.setUserID.bind(this);\n    \n  }\n\n\n\n  setEmail(text){    this.setState({email: text});  }\n  setPassword(text){    this.setState({password: text});  }\n  setPostTitle(text){    this.setState({postTitle: text});  }\n  setPostDescription(text){    this.setState({postDescription: text});  }\n  setPostAssignedUser(text){    this.setState({postAssignedUser: text});  }\n  setPostType(text){    this.setState({postType: text});  }\n  setShowAllSubTasks(visibility){    this.setState({showAllSubTasks: visibility});  }\n  setTaskTitleWriting(text){    this.setState({taskTitleWriting: text});  }\n  setTaskDescriptionWriting(text){    this.setState({taskDescriptionWriting: text});  }\n  setNewLoginFirstName(text){    this.setState({newLoginFirstName: text});  }\n  setNewLoginLastName(text){    this.setState({newLoginLastName: text});  }\n  setNewLoginEmail(text){    this.setState({newLoginEmail: text});  }\n  setNewLoginPassword(text){    this.setState({newLoginPassword: text});  }\n  setNewLoginPassword2(text){    this.setState({newLoginPassword2: text});  }\n  setNewLoginPhone(text){   this.setState({newLoginPhone: text}); }\n  setCreatedPostID(text){   this.setState({createdPostID: text}); }\n  setUserID(text){   this.setState({userID: text}); }\n  setUserName(text){   this.setState({userName: text}); }\n  setUserProjectId(text){   this.setState({userProjectId: text}); }\n\n\n\n  \n  //Entry - Email and Password\n  async fcnEntryModalCheckAndClose(){\n    if(this.state.email.length > 5 && this.state.email.includes(\"@\") && this.state.email.includes(\".com\")){\n      if(this.state.password.length > 5 && this.state.password!='none.ks$ata*0lo3h4seq@wt@uiH2GfdX9asdzbv$7rhgd'){\n        try{\n          this.setState({loadMyPosts: true});\n           const TextForRerquest = 'users/find-by-email-and-pssd?email='+((this.state.email).toString())+\n                      '&pssd=kw*s.x$37tth@$u0K8lE9'+((this.state.password).toString()+'0K2.lp$fzE6qj*tk5lp@$');\n           //const TextForRerquest = 'users/find-by-email-and-pssd?email=thiago@email.com&pssd=1234567';\n           //const TextForRerquest = 'users/find-by-email-and-pssd?email=thiago@email.com&pssd='+(this.state.password).toString();\n           //const TextForRerquest = 'users/find-by-email-and-pssd?email=thiago@email.com&pssd=none.ks$ata*0lo3h4seq@wt@uiH2GfdX9asdzbv$7rhgd';\n          \n          let response = (await api.get(TextForRerquest)).data;\n          user.push(response);\n          //console.log(response.firstName);\n          if(response.firstName.length > 0){\n            this.setUserID(user[0].id);\n            this.setUserName(user[0].firstName);\n            this.setUserProjectId(user[0].projectId);\n            // this.setUserName(user[0].firstName+' '+user[0].lastName);\n  \n            // const path = 'posts/opened-post-but-remove-user-id/'+(this.state.userID).toString();\n            const path = 'posts/find-by-project-id/'+this.state.userProjectId+'/and-by-status?status=OPEN';\n            const response = await api.get(path);\n            this.setState({\n              posts: response.data,\n              loading: false\n            });\n    \n    \n            StrStatus='none';\n            StrType='none';\n            this.setState(\n              {\n                postStatus: '', \n                postType: '',\n                loadMyPosts: false,\n                entryModal:false\n              }\n            );\n          }else{\n            alert('Please, check your your email and password')\n          }\n\n  \n        }catch(error) {\n          this.setState({loadMyPosts: false});\n          user=[];\n          alert('Please, check your credentials and your device status connection')\n\n          console.log('ERROR: ' + error);\n        }\n      }else{\n        alert('Please, check your password')\n      }\n    }else{\n      alert('Please, check your e-mail')\n    }\n  }\n\n  async fcnMyOwnPosted(visibility){\n    \n    if(!visibility){\n      // this.setState({loadMyPosts: true});\n      // const path = 'posts/opened-post-but-remove-user-id/'+(user[0].id).toString();\n      // const response = await api.get(path);\n      // this.setState({\n      //   posts: response.data,\n      //   loading: false\n      // });\n      this.setState({postStatus: ''});\n      this.setState({postType: ''});\n      StrStatus='none';\n      StrType='none'; \n      // this.setState({loadMyPosts: false});\n    }\n\n    this.setState({MyOwnPosted:visibility})\n    this.setState({assignedPostsModal:false})\n  }\n  \n  async fcnAssignedPosts(visibility){\n\n    if(!visibility){\n    //   this.setState({loadMyPosts: true});\n    //   const path = 'posts/opened-post-but-remove-user-id/'+(user[0].id).toString();\n    //   const response = await api.get(path);\n    //   this.setState({\n    //     posts: response.data,\n    //     loading: false\n    //   });\n      this.setState({postStatus: ''});\n      this.setState({postType: ''});\n      StrStatus='none';\n      StrType='none'; \n      // this.setState({loadMyPosts: false});\n    }\n    this.setState({assignedPostsModal:visibility})\n    this.setState({MyOwnPosted:false})\n  }\n\n  fcnEntryModal(visibility){\n    //If its loging out:\n    if(visibility){\n      this.setEmail('');\n      this.setPassword('');\n      user=[];\n    }\n\n      this.setState({entryModal:visibility})\n  }\n\n  async fcnNewLoginModalCheckAndClose(){\n\n      const firstName = this.state.newLoginFirstName;\n      const lastName = this.state.newLoginLastName;\n      const email = this.state.newLoginEmail;\n      const password = this.state.newLoginPassword;\n      const password2 = this.state.newLoginPassword2;\n\n      \n        if(firstName.length > 1 && lastName.length > 1){\n          if(email.length > 5 && email.includes(\"@\") && email.includes(\".com\")) {\n            if(password.length > 5 && password2.length  > 5 && password === password2 && \n                (!password.includes('kw*s.x$37tth@$u0K8lE9')||!password.includes('0K2.lp$fzE6qj*tk5lp@$'))){\n                  this.setState({loadMyPosts: true});\n                  const TextForRerquest = 'users/find-by-email-and-pssd?email='+email+\n                                          '&pssd=none.ks$ata*0lo3h4seq@wt@uiH2GfdX9asdzbv$7rhgd';\n                  try{\n                    const responseOfCheckEmail = await api.get(TextForRerquest);\n                    if(responseOfCheckEmail.data.email==email){\n                      this.setState({loadMyPosts: false});\n                        alert('\\n\" '+responseOfCheckEmail.data.email+' \"\\n\\nThere is an account with this e-mail. Please, try another one\\n\\n'\n                        +'If you forgot your password, contact us:\\n\\nwww.starengtech.com');\n                    }else{\n                      this.setState({loadMyPosts: false});\n                      Alert.alert(\n                        'CREATE NEW LOGIN',\n                        'Are you sure you want to create this new login?',\n                        [\n                          // { text: 'OK', onPress: () => this.setState({newLoginModal:false}) },\n                          { text: 'OK', onPress: () => this.CreateNewLogin() },\n                          { text: 'Cancel', onPress: () => this.setState({newLoginModal:true}), style:'cancel' },\n                        ],\n                        {cancelable: false},\n                        );\n                    }\n                  }catch(error) {\n                    this.setState({loadMyPosts: false});\n                    Alert.alert(\n                      'Sorry,',\n                      'It could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to check -RegisteredNewUserEmail\\n\\n',\n                      [{ text: 'OK'}],\n                      {cancelable: false},\n                    );\n                    console.log('ERROR: ' + error);\n                  }\n                  \n            }else {\n              // this.setState({newLoginPassword: ''});\n              // this.setState({newLoginPassword2: ''});\n              alert('Write your password again, please.\\n\\nTip: It must contain at least 6 characters.');\n            }\n          }else{\n            alert('Please, check your email.');\n          }\n        }else {\n          alert('You must fill up your first and last name');\n        }\n\n  }\n  // ATTENTION! THE PROJECT_ID FOR THE NEW LOGIN CREATED TROUGH THE APP IS A DEFAULT 11 - OLA TASK PROJECT ID. READ A PROJECT ID (NEW PAGE) IF AND TO CREATE USERS FOR OTHER PROJECT,\n  async CreateNewLogin(){\n    try{\n      this.setState({loadMyPosts: true});\n      const newUserData = \n        {\n          \"projectId\": 11,\n          \"firstName\": this.state.newLoginFirstName,\n          \"lastName\": this.state.newLoginLastName,\n          \"email\": this.state.newLoginEmail,\n          \"phone\": this.state.newLoginPhone,\n          \"password\": this.state.newLoginPassword\n        };\n        await api.post('users',newUserData);\n        this.setState({newLoginModal:false});\n        this.setState({loadMyPosts: false});\n        Alert.alert(\n          'Congrats,',\n          '\\nNew login created.\\n\\nYou can access the OLA TASK now.\\n\\nwww.starengtech.com',\n          [{ text: 'OK'}],\n          {cancelable: false},\n        );\n    }catch(error) {\n      Alert.alert(\n        'Sorry,',\n        'It could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to create -newUser',\n        [{ text: 'OK'}],\n        {cancelable: false},\n      );\n      console.log('ERROR: ' + error);\n    }\n  }\n  fcnNewLoginModal(visibility){\n      this.setState({newLoginModal:visibility})\n  }\n\n  fcnMyPostModal(visibility){\n    try{\n      this.setState({\n        postType: 'DELIVERY', \n        myPostsModal:visibility\n      });\n\n    }catch(error) {\n      console.log('ERROR: ' + error);\n    }\n  }\n\n\n\n  async fcnGetFilteredPostsByAssignedUser(variable, typeChanging){\n    \n    if(typeChanging){\n      switch (variable) {\n        case 0: StrType = 'DELIVERY';\n          break;\n        case 1: StrType = 'INSTALLATION';\n          break;\n        case 2: StrType = 'MANUAL_SERVICES';\n          break;\n        case 3: StrType = 'OTHER';\n          break;\n        case 4: StrType = 'REMOVAL';\n          break;\n        default:StrType = 'none';\n      }\n\n      this.setState({postType: variable});\n      this.setState({loadMyPosts: true});\n  }else{\n    switch (variable) {\n      case 0: StrStatus = 'BLOCKED';\n        break;\n      case 1: StrStatus = 'CREATED';\n        break;\n      case 2: StrStatus = 'OPEN';\n        break;\n      case 3: StrStatus = 'ASSIGNED';\n        break;\n      case 4: StrStatus = 'CLOSED';\n        break;\n      case 5: StrStatus = 'CANCELLED';\n        break;\n      case 6: StrStatus = 'DONE';\n        break;\n      default:StrStatus = 'none';\n    }\n    this.setState({postStatus: variable});\n    this.setState({loadMyPosts: true});\n  }\n\n      try{\n          const path = 'posts/find-by-type-status-and-user-assigned?type='+StrType+'&status='+StrStatus+'&user_id='+this.state.userID;\n          const response = await api.get(path);\n          this.setState({\n            postsByUser: response.data,\n            loadMyPosts: false\n          });\n        \n      }catch(error) {\n        this.setState({loadMyPosts: false});\n        Alert.alert(\n          'Sorry,',\n          'It could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to filter -statusAssigned',\n          [{ text: 'OK'}],\n          {cancelable: false},\n        );\n        console.log('ERROR: ' + error);\n      }\n        \n  }\n\n\n  \n  async fcnGetPostByStatus(status, onlyUserId){\n\n    switch (status) {\n      case 0: StrStatus = 'BLOCKED';\n        break;\n      case 1: StrStatus = 'CREATED';\n        break;\n      case 2: StrStatus = 'OPEN';\n        break;\n      case 3: StrStatus = 'ASSIGNED';\n        break;\n      case 4: StrStatus = 'CLOSED';\n        break;\n      case 5: StrStatus = 'CANCELLED';\n        break;\n      case 6: StrStatus = 'DONE';\n        break;\n      default:StrStatus = 'none';\n    }\n    \n    this.setState({postStatus: status});\n\n    this.setState({loadMyPosts: true});\n      try{\n        if(onlyUserId){\n          // IF it is in \"MY LIST\" get ONLY user_id\n          const path = 'posts/find-by-type-status-and-user-id?type='+StrType+'&status='+StrStatus+'&user_id='+this.state.userID;\n          const response = await api.get(path);\n          this.setState({\n            postsByUser: response.data,\n            loadMyPosts: false\n          });\n        } else{\n          // IF it is NOT in \"MY LIST\" get REMOVIND user_id\n          const path = 'posts/find-by-project-id/'+this.state.userProjectId+'/and-by-type-status-but-remove-user-id?type='+StrType+'&status='+StrStatus+'&user_id='+this.state.userID;\n          const response = await api.get(path);\n          this.setState({\n            posts: response.data,\n            loadMyPosts: false\n          });\n        }\n        \n      }catch(error) {\n        this.setState({loadMyPosts: false});\n        Alert.alert(\n          'Sorry,',\n          'It could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to filter -statusPost.',\n          [{ text: 'OK'}],\n          {cancelable: false},\n        );\n        console.log('ERROR: ' + error);\n      }\n        \n  }\n    \n\n\n  async fcnGetPostByType(type, onlyUserId){\n\n    switch (type) {\n      case 0: StrType = 'DELIVERY';\n        break;\n      case 1: StrType = 'INSTALLATION';\n        break;\n      case 2: StrType = 'MANUAL_SERVICES';\n        break;\n      case 3: StrType = 'OTHER';\n        break;\n      case 4: StrType = 'REMOVAL';\n        break;\n      default:StrType = 'none';\n    }\n\n    this.setState({postType: type});\n\n    this.setState({loadMyPosts: true});\n    try{\n      if(onlyUserId){\n        // IF it is in \"MY LIST\" get ONLY user_id\n        const path = 'posts/find-by-type-status-and-user-id?type='+StrType+'&status='+StrStatus+'&user_id='+this.state.userID;\n        const response = await api.get(path);\n        this.setState({\n          postsByUser: response.data,\n          loadMyPosts: false\n        });\n      } else{\n        // IF it is NOT in \"MY LIST\" get REMOVIND user_id\n        // const path = 'posts/get-by-type-status-but-remove-user-id?type='+StrType+'&status='+StrStatus+'&user_id='+this.state.userID;\n        var path = '';\n        if(StrType=='none'){\n          path = 'posts/find-by-project-id/'+this.state.userProjectId+'/and-by-status?status=OPEN';\n        }else{\n          path = 'posts/find-by-project-id/'+this.state.userProjectId+'/and-by-type-and-status?type='+StrType+'&status=OPEN';\n        }\n        const response = await api.get(path);\n        this.setState({\n          posts: response.data,\n          loadMyPosts: false\n        });\n      }\n        \n    } catch(error) {\n      this.setState({loadMyPosts: false});\n      Alert.alert(\n        'Sorry,',\n        'We could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to filter -typePost',\n        [{ text: 'OK'}],\n        {cancelable: false},\n      );\n      console.log('ERROR: ' + error);\n    }\n    \n  }\n\n\n\n  async fcnMyOwnPostsModal(visibility){\n    try{\n      this.setState({loadMyPosts: true});\n      \n      this.setState({postStatus: ''});\n      this.setState({postType: ''});\n      StrStatus='none';\n      StrType='none';\n\n      const response = await api.get('posts/find-by-user-id/'+(user[0].id).toString());\n      this.setState({\n        postsByUser: response.data,\n        loadMyPosts: false\n      });\n      \n      this.fcnMyOwnPosted(visibility)\n    }catch(error) {\n      this.setState({loadMyPosts: false});\n      Alert.alert(\n        'Sorry,',\n        'We could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to access -userPost.',\n        [{ text: 'OK'}],\n        {cancelable: false},\n      );\n      console.log('ERROR: ' + error);\n    }\n  }\n\n\n  async fcnAssignedPostsModal(visibility){\n    this.setState({loadMyPosts: true});\n\n    this.setState({postStatus: ''});\n    this.setState({postType: ''});\n    StrStatus='none';\n    StrType='none';\n\n    try{\n      const response = await api.get('posts/find-by-assigned-user/'+(user[0].id).toString());\n      this.setState({\n        postsByUser: response.data,\n        loadMyPosts: false\n      });\n      this.fcnAssignedPosts(visibility)\n    }catch(error) {\n      Alert.alert(\n        'Sorry,',\n        'We could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to access -userAssignedPosts.',\n        [{ text: 'OK'}],\n        {cancelable: false},\n        );\n        console.log('ERROR: ' + error);\n    }\n    \n    this.setState({loadMyPosts: false});\n  }\n\n  fcnAskToGoToStarengWebsite(){\n    Alert.alert(\n      'STARENG WEBSITE',\n      'Are you sure you want to visit Stareng Technology website?',\n      [\n        // { text: 'OK', onPress: () => this.setState({subTasksModal:true}) },\n        { text: 'OK', onPress: () => Linking.openURL('https://www.starengtech.com/') },\n        { text: 'Cancel', style:'cancel' },\n      ],\n      {cancelable: false},\n    );\n  }\n\n  async fcnCreatePostAndOpenSubTasksModal(visibility){\n\n    if(this.state.postTitle.length > 5 || this.state.postDescription.length > 5) {\n\n      const userEmailToAssign = this.state.postAssignedUser.toString();\n\n      if(userEmailToAssign!=''){\n        const TextForRerquest = 'users/find-by-email-and-pssd?email='+userEmailToAssign+\n                                '&pssd=none.ks$ata*0lo3h4seq@wt@uiH2GfdX9asdzbv$7rhgd';\n        try{\n          const responseOfCheckEmail = await api.get(TextForRerquest);\n          if(responseOfCheckEmail.data.email==userEmailToAssign){\n            if(visibility==true){\n              Alert.alert(\n                'CREATE TASK',\n                'Are you sure you want to create this new task?',\n                [\n                  // { text: 'OK', onPress: () => this.setState({subTasksModal:true}) },\n                  { text: 'OK', onPress: () => this.createNewPost(responseOfCheckEmail.data.id) },\n                  { text: 'Cancel', onPress: () => this.setState({subTasksModal:false}), style:'cancel' },\n                ],\n                {cancelable: false},\n              );\n            }else{\n              this.setState({subTasksModal:visibility})\n            }\n          }else{\n            alert('\\n\" '+userEmailToAssign+' \"\\n\\nCould not assign to it.\\n\\nThere is no account with this e-mail.');\n          }\n\n        }catch(error) {\n          this.setState({loadMyPosts: false});\n          Alert.alert(\n            'Sorry,',\n            'We could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to get -userToAssignTask',\n            [{ text: 'OK'}],\n            {cancelable: false},\n          );\n          console.log('ERROR: ' + error);\n        }\n\n      }else{\n        if(visibility==true){\n          Alert.alert(\n            'CREATE TASK',\n            'Are you sure you want to create this new task?',\n            [\n              // { text: 'OK', onPress: () => this.setState({subTasksModal:true}) },\n              { text: 'OK', onPress: () => this.createNewPost(-1) },\n              { text: 'Cancel', onPress: () => this.setState({subTasksModal:false}), style:'cancel' },\n            ],\n            {cancelable: false},\n          );\n        }else{\n          this.setState({subTasksModal:visibility})\n        }\n      }\n    }else{\n      Alert.alert(\n        'TITLE AND DESCRIPTION',\n        'Please, insert a valid post title and description',\n        [{ text: 'OK'}],\n        {cancelable: false},\n      );\n    }\n  }\n\n  async createNewPost(userToAssignId){\n    try{\n      this.setState({loadMyPosts: true});\n        const newUserData = \n        {\n          \"projectId\":(user[0].projectId).toString(),\n          \"title\": this.state.postTitle,\n          \"description\": this.state.postDescription,\n          \"type\": this.state.postType,\n          \"user\": {\"id\": (user[0].id).toString()}\n        };\n\n        const apiResponse = await api.post('posts',newUserData);\n        const data = await apiResponse.data;\n\n        \n        this.setState({ createdPostID: (data.id).toString() });\n\n        if(userToAssignId!=-1){\n          const path = 'posts/assign-user?post_id='+(data.id).toString()+'&assign_id='+userToAssignId.toString();\n          await api.put(path);\n        }\n\n        \n        // alert('Postid: '+data.id.toString());\n      // this.setState({loadMyPosts: false});\n      this.setState({subTasksModal:true})\n    }catch(error) {\n      this.setState({loadMyPosts: false});\n      Alert.alert(\n        'Sorry,',\n        'We could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to create -newTaskFirstPage',\n        [{ text: 'OK'}],\n        {cancelable: false},\n      );\n      console.log('ERROR: ' + error);\n    }\n  }\n\n  fcnCreatetasksForPostAndCloseAllModals(visibility){\n    try{\n\n      if(this.state.taskTitleWriting!=\"\" && this.state.taskDescriptionWriting!=\"\"){\n        this.saveTaskTitleAndDescription();\n      }\n\n      if(visibility==true){\n        Alert.alert(\n          'CREATE SUBTASKS AND SUBMIT',\n          'Are you sure you want to create these subtasks and submit?',\n          [\n            // { text: 'OK', onPress: () => this.setState({subTasksModal:false})},\n            { text: 'OK', onPress: () => this.createNewTasksForAPost() },\n            { text: 'Cancel', onPress: () => this.setState({subTasksModal:true}), style:'cancel' },\n          ],\n          {cancelable: false},\n        );\n      }else{\n        //Fechar a modal subtasks e modal Post\n        this.setState({myPostsModal:false})\n        this.setState({subTasksModal:false})\n\n      }\n    }catch(error) {\n      Alert.alert(\n        'Sorry,',\n        'We could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to create -newTaskLastPage',\n        [{ text: 'OK'}],\n        {cancelable: false},\n      );\n      console.log('ERROR: ' + error);\n    }\n  }\n\n  async createNewTasksForAPost(){\n\n    this.setState({\n      loadMyPosts: true,\n      myPostsModal:false, \n      subTasksModal:false\n    });\n    \n    try{\n\n        for(var i = 0; i < taskTitle.length; i++) {\n          const newUserData = \n          {\n            \"title\": taskTitle[i],\n            \"description\": taskDescription[i],\n            \"post\": {\"id\": this.state.createdPostID }\n          };\n          await api.post('tasks',newUserData);\n        }\n        if(this.state.postAssignedUser.toString()==''){\n          await api.put('posts/'+this.state.createdPostID+'/next-status');\n        }else{\n          this.setPostAssignedUser('');\n        }\n        \n        this.fcnAssignedPosts(false)\n        this.fcnMyOwnPosted(false)\n        taskTitle=[];\n        taskDescription=[];\n        this.fcnGetFilteredPostsByAssignedUser(2, false)\n        this.setState({\n          loadMyPosts: false, \n        });\n\n        Alert.alert(\n          'Yes, you got it!',\n          '\\nYour new task has just been created.\\n\\nCheck it out in \"My created tasks\".',\n          [\n            // { text: 'OK  '},\n            { text: 'OK', onPress: () => this.fcnMyOwnPostsModal(true)}\n         ],\n          {cancelable: false},\n        );\n      \n    }catch(error) {\n      this.setState({loadMyPosts: false});\n      Alert.alert(\n        'Sorry,',\n        'It could not complete the request.\\n\\nPrease, try again soon.\\n\\nError to create -newSubTasks',\n        [{ text: 'OK'}],\n        {cancelable: false},\n      );\n      console.log('ERROR: ' + error);\n    }\n  }\n\n  saveTaskTitleAndDescription(){\n      \n      try{\n        if(this.state.taskTitleWriting!=\"\" && this.state.taskDescriptionWriting!=\"\"){\n          const finalNewText = this.state.taskTitleWriting;\n          taskTitle.push(finalNewText);\n          taskDescription.push(this.state.taskDescriptionWriting);\n          this.setTaskTitleWriting(\"\");\n          this.setTaskDescriptionWriting(\"\");\n        }else{\n          Alert.alert(\n            'Incorrect',\n            'Prease, check if the task or its description is empty and try again.',\n            [\n              { text: 'OK', onPress: () => ({}) }\n            ],\n            {cancelable: false},\n          );\n        }\n      }catch(error) {\n        console.log('ERROR: ' + error);\n      }\n  }\n\n  \n\n  handleRefreshing = () => {\n    this.setState(\n      {\n        seed: this.state.seed+1,\n      },\n      () => {\n        this.fcnEntryModalCheckAndClose();\n      }\n    );\n  }\n\n  handleRefreshingForMyTasks = () => {\n    this.setState(\n      {\n        seed: this.state.seed+1,\n      },\n      () => {\n        this.fcnMyOwnPostsModal(true);\n      }\n    )\n  }\n \n  handleRefreshingForAssigned = () => {\n    this.setState(\n      {\n        seed: this.state.seed+1,\n      },\n      () => {\n        this.fcnAssignedPostsModal(true);\n      }\n    );\n  }\n\n  \n\n  render() {\n\n    if(this.state.loading){\n      return(\n        <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\n          <ActivityIndicator color=\"#09A6FF\" size={40}/>\n        </View>\n      )\n    }else{\n      return(\n\n      <View style={styles.container}>\n  \n\n\n{/* -------------------------------------------------------------------------------------------------------------------- */}\n\n\n\n          {/* MODAL - MAIN LOGIN SCREEN */}\n          <Modal animationType='fade' visible={this.state.entryModal}>\n            <View style={styles.entryModal}>\n              <Text style={{color:'#09BFFF', fontSize:30, margin:60, fontWeight:'700'}}>OLA TASK</Text>\n              <Text style={{color:'#FFF', fontSize:16, margin:15}}>A Stareng Technology product</Text>\n              <Text style={{color:'#FFF', fontSize:12, margin:20}}>Olá, use or create your login to access the Ola Task app.</Text>\n              <TextInput \n                style={styles.inputsEntry}\n                placeholder=\"e-mail\"\n                placeholderTextColor={\"#888\"}\n                underlineColorAndroid=\"transparent\"\n                onChangeText={this.setEmail}\n                keyboardType={'email-address'}\n                returnKeyType={'next'}\n                autoCapitalize={'none'}\n                onSubmitEditing={() => { this.state.inputEntryPassword.focus() }}\n              />\n              <TextInput \n                style={styles.inputsEntry}\n                placeholder=\"password\"\n                placeholderTextColor={\"#888\"}\n                underlineColorAndroid=\"transparent\"\n                onChangeText={this.setPassword}\n                secureTextEntry={true}\n                returnKeyType={'done'}\n                ref={(input) => {this.state.inputEntryPassword = input;}}\n                onSubmitEditing={() => { this.fcnEntryModalCheckAndClose()}}\n              />\n              <TouchableOpacity style={styles.botaoEntry} onPress={()=>this.fcnEntryModalCheckAndClose()}>\n                <Text style={styles.botaoTexto}>Enter</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={{}} onPress={()=>this.fcnNewLoginModal(true)}>\n               <Text style={{color:'#09BFFF', fontSize:12, margin:30} }>CREATE LOGIN</Text>  \n              </TouchableOpacity>\n              \n              <TouchableOpacity style={{flex:1, alignContent:'flex-end', justifyContent:'flex-end', padding:30}}\n                    onPress={() => this.fcnAskToGoToStarengWebsite()}>\n                <Text style={{color:'#FFF', fontSize:12, margin:10}}>www.starengtech.com</Text>\n              </TouchableOpacity>\n            </View>\n          </Modal>\n\n\n\n\n\n{/* -------------------------------------------------------------------------------------------------------------------- */}\n\n\n\n\n\n          {/*   MODAL - CREATE NEW LOGIN   */}\n\n\n          <Modal animationType='fade' visible={this.state.newLoginModal}>\n            <View style={styles.entryModal}>\n              <Text style={{color:'#09BFFF', fontSize:26, marginTop:60, marginBottom:40, fontWeight:'700'}}>CREATE NEW LOGIN</Text>\n              <Text style={{color:'#FFF', fontSize:12, margin:0}}>Olá.</Text>\n              <Text style={{color:'#FFF', fontSize:12, margin:20}}>Please, fill it up to create your login.</Text>\n              <TextInput \n                style={styles.inputsNewLogin}\n                placeholder=\"first name\"\n                placeholderTextColor={\"#666\"}\n                underlineColorAndroid=\"transparent\"\n                onChangeText={this.setNewLoginFirstName}\n                keyboardType={'default'}\n                onSubmitEditing={() => { this.state.inputNewLastName.focus() }}\n              />\n              <TextInput \n                style={styles.inputsNewLogin}\n                placeholder=\"last name\"\n                placeholderTextColor={\"#666\"}\n                underlineColorAndroid=\"transparent\"\n                onChangeText={this.setNewLoginLastName}\n                ref={(input) => {this.state.inputNewLastName = input;}}\n                onSubmitEditing={() => { this.state.inputNewEmail.focus() }}\n              />\n              <TextInput \n                style={styles.inputsNewLogin}\n                placeholder=\"e-mail\"\n                placeholderTextColor={\"#666\"}\n                underlineColorAndroid=\"transparent\"\n                onChangeText={this.setNewLoginEmail}\n                keyboardType={'email-address'}\n                autoCapitalize={'none'}\n                ref={(input) => {this.state.inputNewEmail = input;}}\n                onSubmitEditing={() => { this.state.inputNewPassword.focus() }}\n              />\n              <TextInput \n                style={styles.inputsNewLogin}\n                placeholder=\"password\"\n                placeholderTextColor={\"#666\"}\n                underlineColorAndroid=\"transparent\"\n                onChangeText={this.setNewLoginPassword}\n                secureTextEntry={true}\n                ref={(input) => {this.state.inputNewPassword = input;}}\n                onSubmitEditing={() => { this.state.inputNewPassword2.focus() }}\n              />\n              <TextInput \n                style={styles.inputsNewLogin}\n                placeholder=\"write your password again\"\n                placeholderTextColor={\"#666\"}\n                underlineColorAndroid=\"transparent\"\n                secureTextEntry={true}\n                onChangeText={this.setNewLoginPassword2}\n                ref={(input) => {this.state.inputNewPassword2 = input;}}\n                blurOnSubmit={true}\n                onSubmitEditing={() => {Keyboard.dismiss(), this.fcnNewLoginModalCheckAndClose()}}\n              />\n              <TouchableOpacity style={styles.botaoEntry} onPress={()=>this.fcnNewLoginModalCheckAndClose()}>\n                <Text style={styles.botaoTexto}>Create login</Text>\n              </TouchableOpacity>\n\n              <View style={{flex:1, alignContent:'flex-end', justifyContent:'flex-end', padding:30}}>\n              <TouchableOpacity style={{width:150, borderWidth:1, borderColor:'#FF6347', marginBottom:20,  borderRadius:15, alignItems:'center',\n                                      justifyContent:'center'}} onPress={()=>this.fcnNewLoginModal(false)}>\n                    <Text style={{textAlign: 'center',fontSize:14, margin:1, padding:10,  color: '#FF6347'}}>Cancel</Text>\n                  </TouchableOpacity>\n                <Text style={{color:'#FFF', fontSize:12, margin:10, alignSelf:'center'}}>www.starengtech.com</Text>\n              </View>\n            </View>\n          </Modal>\n\n\n\n\n\n{/* -------------------------------------------------------------------------------------------------------------------- */}\n\n\n\n\n\n          {/*  MODAL - CREATE NEW POSTS  */}\n\n\n          <Modal animationType='fade' visible={this.state.myPostsModal}>\n            <ScrollView style={styles.myPostsModal}>\n              <View style={{justifyContent:'flex-start', alignItems:'center', marginBottom:15}}>\n                <Text style={{color:'#000', fontSize:20, margin:40, fontWeight:'700', \n                      borderBottomWidth:0,borderBottomColor:'#09AFFF', padding:10}}>CREATE NEW TASK</Text>\n                <Text style={{color:'#000', fontSize:12, margin:3}}>TITLE:</Text>\n                <TextInput \n                  style={styles.inputsMyTasks}\n                  placeholder=\"title\"\n                  underlineColorAndroid=\"transparent\"\n                  onChangeText={this.setPostTitle}\n                  onSubmitEditing={() => { this.state.inputDecriptionInNewPost.focus() }}\n                />\n                <Text style={{color:'#000', fontSize:12, margin:3}}>DESCRIPTION:</Text>\n                <TextInput \n                  style={styles.inputsMyTasksBigger}\n                  placeholder=\"description\"\n                  underlineColorAndroid=\"transparent\"\n                  onChangeText={this.setPostDescription}\n                  ref={(input) => {this.state.inputDecriptionInNewPost = input;}}\n                  blurOnSubmit={true}\n                  onSubmitEditing={() => { this.state.inputAssignToSomeone.focus() }}\n                  multiline={true}\n                />\n                <Text style={{color:'#000', fontSize:12, margin:3}}>ASSIGN TO YOU OR SOMEONE ELSE?</Text>\n                <Text style={{color:'#000', fontSize:12, margin:3}}>Write down an email (it can be yours) if you wish to create a private task.</Text>\n                <TextInput \n                  style={styles.inputsMyTasks}\n                  placeholder=\"email (optional)\"\n                  underlineColorAndroid=\"transparent\"\n                  onChangeText={this.setPostAssignedUser}\n                  keyboardType={'email-address'}\n                  autoCapitalize={'none'}\n                  ref={(input) => {this.state.inputAssignToSomeone = input;}}\n                  onSubmitEditing={()=>{Keyboard.dismiss()}}\n                />\n                <Text style={{color:'#000', fontSize:12, marginTop:3}}>TYPE:</Text>\n\n              </View>\n              <View\n                    style={{\n                        width: 280,\n                        marginTop: -5,\n                        borderColor: 'black',\n                        borderBottomWidth:1,\n                        borderRadius: 10,\n                        alignSelf: 'center'\n                    }}>\n                  <Picker \n                    selectedValue={this.state.postType} \n                    onValueChange={(itemValue,itemIndex) => this.setState({postType: itemValue})}\n                    style={{color:'#6495ED', padding:10}}\n                    >\n                      <Picker.Item key={0} value={0} label=\"DELIVERY\"/>\n                      <Picker.Item key={1} value={1} label=\"INSTALLATION\"/>\n                      <Picker.Item key={2} value={2} label=\"MANUAL SERVICES\"/>\n                      <Picker.Item key={3} value={3} label=\"OTHER\"/>\n                      <Picker.Item key={4} value={4} label=\"REMOVAL\"/>\n                  </Picker>\n\n              </View>\n              <View style={{flex:1, flexDirection:'row', justifyContent:'space-around', alignItems:'center', margin:5, marginTop:50, padding:10}}>\n                {/* <TouchableOpacity style={styles.botaoMyPostSave} onPress={()=>this.fcnCreatePostAndOpenSubTasksModal(true)}>\n                  <Text style={styles.botaoTextoMyPostSave}>Next</Text>\n                </TouchableOpacity> */}\n                  <TouchableOpacity style={styles.botaoMyPostBack} onPress={()=>this.fcnMyPostModal(false)}>\n                    <Text style={styles.botaoTextoMyPostBack}>Cancel</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity style={styles.botaoAssign} onPress={()=>this.fcnCreatePostAndOpenSubTasksModal(true)}>\n                    <Text style={{color:'#FFF', fontSize: 14, padding:5}}>Next</Text>\n                  </TouchableOpacity>\n                {/* <View style={{flex:1, alignContent:'flex-end', justifyContent:'flex-end', padding:30}}> */}\n                {/* </View> */}\n              </View>\n              \n            </ScrollView>\n          </Modal>\n\n\n\n{/* -------------------------------------------------------------------------------------------------------------------- */}\n\n\n\n          {/*   MODAL - SUBTASKS - CREATE SUBTASKS   */}\n\n          <Modal animationType='slide' visible={this.state.subTasksModal}>\n            <ScrollView style={styles.myPostsModal}>\n              <View style={{justifyContent:'flex-start', alignItems:'center', marginBottom:15}}>\n                <Text style={{color:'#000', fontSize:20, margin:35, fontWeight:'700', \n                      borderBottomWidth:0,borderBottomColor:'#09AFFF', padding:10}}>SUBTASKS</Text>\n\n                <Text style={{color:'#000', fontSize:13, margin:6,marginBottom:8 }}>Would you like to create subtasks for this task?</Text>\n                <Text style={{color:'#000', fontSize:13, margin:7,marginBottom:8 }}>\" {this.state.postTitle} \"</Text>\n                {/* <Text style={{color:'#000', fontSize:12, margin:3}}>TASK:</Text> */}\n                <TextInput \n                  style={styles.inputsMyTasks}\n                  placeholder=\"subtask (optional)\"\n                  underlineColorAndroid=\"transparent\"\n                  onChangeText={this.setTaskTitleWriting}\n                  value={this.state.taskTitleWriting}\n                  onSubmitEditing={() => { this.state.inputDecriptionInNewSubTask.focus() }}\n                />\n                {/* <Text style={{color:'#000', fontSize:12, margin:3}}>DESCRIPTION:</Text> */}\n                <TextInput \n                  style={styles.inputsMyTasksMiddle}\n                  placeholder=\"description (optional)\"\n                  underlineColorAndroid=\"transparent\"\n                  onChangeText={this.setTaskDescriptionWriting}\n                  value={this.state.taskDescriptionWriting}\n                  ref={(input) => {this.state.inputDecriptionInNewSubTask = input;}}\n                  returnKeyType=\"done\"\n                  blurOnSubmit={true}\n                  onSubmitEditing={() => {Keyboard.dismiss(), this.saveTaskTitleAndDescription()}}\n                  multiline={true}\n                />\n                <View style={{alignSelf:'flex-end', marginRight:15, marginBottom:-20}}>\n                  <TouchableOpacity style={styles.botaoMyPostSaveTasks} onPress={()=>this.saveTaskTitleAndDescription()}>\n                      <Text style={styles.botaoTextoMyPostSaveTasks}>Add</Text>\n                  </TouchableOpacity>\n\n                </View>\n\n                <View style={{borderRadius:10}}>\n                  {taskTitle.length > 0 ? \n                  <View>\n                    <Text style={{alignSelf:'center', color:'#000', fontSize:12, margin:4,marginBottom:9 }}>SAVED TASKS:</Text>\n\n                      <View style={{justifyContent:'space-around', width:Dimensions.get(\"screen\").width,\n                      backgroundColor:'#efefef', alignItems:'center', flexDirection:'row',borderRadius:10 }}>\n                          <View style={{width:Dimensions.get(\"screen\").width/2, alignItems:'flex-start', padding:10, borderRightWidth:1, borderRightColor:'#999'}}>\n                            {taskTitle.map((item, key)=>(\n                              <Text key={key} style={{color:'#222', height:50, fontSize:16, margin:3}}>{item+\"\\n\"}</Text>))}\n                          </View>\n                          <View style={{width:Dimensions.get(\"screen\").width/2, alignItems:'flex-start', padding:10}}>\n                            {taskDescription.map((item, key)=>(\n                              <Text key={key} style={{color:'#222',height:50, fontSize:13, margin:3}}>{item+\"\\n\"}</Text>))}\n                          </View>\n                      </View>   \n                  </View>\n\n                  :  <View></View>\n                }\n                </View>\n\n\n              </View>\n              <View style={{flex:1,justifyContent:'flex-start', alignItems:'center'}}>\n                <TouchableOpacity style={styles.botaoSubmit} onPress={()=>this.fcnCreatetasksForPostAndCloseAllModals(true)}>\n                  <Text style={styles.botaoTextoMyPostSave}>Submit and open task</Text>\n                </TouchableOpacity>\n                {/* <TouchableOpacity style={styles.botaoMyPostBack} onPress={()=>this.fcnCreatetasksForPostAndCloseAllModals(false)}>\n                  <Text style={styles.botaoTextoMyPostBack}>Add tasks later</Text>\n                </TouchableOpacity> */}\n\n              \n              </View>\n              \n            </ScrollView>\n          </Modal>\n\n\n\n\n\n{/* -------------------------------------------------------------------------------------------------------------------- */}\n\n\n\n          {/*   MODAL - MY LIST OF TASKS - MY TASKS   */}\n\n\n          <Modal animationType='fade' visible={this.state.MyOwnPosted}>\n            <View style={{marginTop:0,paddingTop:15,paddingBottom:15, alignSelf:'center', backgroundColor:'#2F4F4F'}}>\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-between', width:Dimensions.get(\"screen\").width, \n                              borderBottomWidth:1, borderColor:'#20B2AA', marginBottom:0, paddingTop:14, padding:5, paddingBottom:5}}>\n                  <TouchableOpacity onPress={()=>this.fcnMyOwnPosted(false)} style={{width:44, height:44, borderWidth:1, alignItems:'center',\n                                  justifyContent:'center',borderColor:'#FF6347', borderRadius:22, marginLeft:10}} >\n                    <Text style={{marginTop:0, fontSize:10, color:'#FF6347'}}>Back</Text>\n                  </TouchableOpacity>\n                  \n                    <Text style={{color:'#fff', fontSize:18, margin:5, fontWeight:'700', \n                        borderBottomWidth:0,borderBottomColor:'#2F4F4F', padding:10, marginLeft:-10}}>MY CREATED TASKS</Text>\n\n                        <TouchableOpacity onPress={()=>this.fcnMyPostModal(true)} style={{width:44, height:44, borderWidth:1, alignItems:'center',\n                                  justifyContent:'center',borderColor:'#09AFFF', borderRadius:22, marginRight:10}} >\n                    <Text style={{marginTop:0, fontSize:10, color:'#09AFFF'}}>New</Text>\n                  </TouchableOpacity>\n                  \n                </View>\n            </View>\n            <View style={styles.smallTop}>\n              <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnMyOwnPosted(false)}>\n                <Text style={styles.textSmallTop}>Home</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnAssignedPostsModal(true)}>\n                <Text style={styles.textSmallTop}>Assigned</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={{padding:2, backgroundColor:'#20B2AA',borderWidth:1, borderColor:'#fff', borderRadius:20, marginTop:-12}} >\n                <Text style={{alignSelf:'center', color:'#FFF', fontWeight:'600', fontSize:14, padding:5, marginBottom:0, marginTop:0}}>Created</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnMyPostModal(true)}>\n                <Text style={styles.textSmallTop}>New Task</Text>\n              </TouchableOpacity>\n\n            </View>\n            <View style={{flexDirection:'row', marginLeft:0, alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width}}>\n\n              <View\n                  style={{\n                      width: Dimensions.get(\"screen\").width/2,\n                      alignSelf:'center',\n                      marginTop: 2,\n                      marginBottom:5,\n                      borderColor: 'black',\n                      borderBottomWidth:1,\n                      borderRadius: 10\n                  }}>\n                  <Picker \n                    selectedValue={this.state.postStatus}\n                    value={this.state.postStatus}\n                    onValueChange={(itemValue,itemIndex) =>  this.fcnGetPostByStatus(itemValue, true) }\n                    style={{color:'#6495ED', paddingTop:5, marginTop:1}}\n                    >\n                      <Picker.Item value='' label='Status - no filter' />\n                      <Picker.Item key={0} value={0} label=\"BLOCKED\"/>\n                      <Picker.Item key={1} value={1} label=\"CREATED\"/>\n                      <Picker.Item key={2} value={2} label=\"OPEN\"/>\n                      <Picker.Item key={3} value={3} label=\"ASSIGNED\"/>\n                      <Picker.Item key={6} value={6} label=\"DONE\"/>\n                      <Picker.Item key={4} value={4} label=\"CLOSED\"/>\n                      <Picker.Item key={5} value={5} label=\"CANCELLED\"/>\n                  </Picker>\n\n                </View>\n\n                <View\n                  style={{\n                      width: Dimensions.get(\"screen\").width/2,\n                      marginTop: 2,\n                      marginBottom:5,\n                      borderColor: 'black',\n                      borderBottomWidth:1,\n                      borderRadius: 10\n                  }}>\n                  <Picker \n                    selectedValue={this.state.postType} \n                    value={this.state.postType}\n                    onValueChange={(itemValue,itemIndex) => this.fcnGetPostByType(itemValue,true)}\n                    style={{color:'#6495ED', paddingTop:5, marginTop:1}}\n                    >\n                      <Picker.Item value='' label='Type - no filter' />\n                      <Picker.Item key={0} value={0} label=\"DELIVERY\"/>\n                      <Picker.Item key={1} value={1} label=\"INSTALLATION\"/>\n                      <Picker.Item key={2} value={2} label=\"MANUAL SERVICES\"/>\n                      <Picker.Item key={3} value={3} label=\"OTHER\"/>\n                      <Picker.Item key={4} value={4} label=\"REMOVAL\"/>\n                  </Picker>\n\n                </View>\n\n          </View>\n          {this.state.postsByUser.length == 0 && this.state.postType=='' && this.state.postStatus==''? \n              <View>\n                <TouchableOpacity style={styles.botaoAssigned} onPress={()=>this.fcnMyPostModal(true)}>\n                  <Text style={{color:'#2F4F4F', fontSize: 17, margin:3, padding:5}}>CREATE TASK</Text>\n                </TouchableOpacity>\n              </View>\n          : \n          <View>\n            {this.state.postsByUser.length == 0 ?\n                <View style={styles.botaoEmpty}>\n                  <Text style={{color:'#2F3F4F', fontSize: 17, margin:3, padding:8}}>EMPTY</Text>\n                </View>\n              :\n                <FlatList\n                data={this.state.postsByUser}\n                keyExtractor={item => item.id.toString() }\n                renderItem={ ({item}) => <PostsByUser data={item} /> }\n                refreshing={this.state.loadMyPosts}\n                onRefresh={this.handleRefreshingForMyTasks}\n                contentContainerStyle={{ paddingBottom: 250 }}\n                />\n            }\n\n          </View>\n          }\n          </Modal>\n\n\n\n\n\n{/* -------------------------------------------------------------------------------------------------------------------- */}\n\n\n\n\n\n\n          {/*   MODAL - ASSIGNED LIST OF POSTS - ASSIGNED   */}\n\n\n          <Modal animationType='fade' visible={this.state.assignedPostsModal}>\n          <View style={{marginTop:0,paddingTop:15,paddingBottom:15, alignSelf:'center', backgroundColor:'#2F4F4F'}}>\n                <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-between', width:Dimensions.get(\"screen\").width, \n                              borderBottomWidth:1, borderColor:'#20B2AA', marginBottom:0, paddingTop:14, padding:5, paddingBottom:5}}>\n                  <TouchableOpacity onPress={()=>this.fcnAssignedPosts(false)} style={{width:44, height:44, borderWidth:1, alignItems:'center',\n                                  justifyContent:'center',borderColor:'#FF6347', borderRadius:22, marginLeft:10}} >\n                    <Text style={{marginTop:0, fontSize:10, color:'#FF6347'}}>Back</Text>\n                  </TouchableOpacity>\n\n                    <Text style={{color:'#fff', fontSize:18, margin:5, fontWeight:'700', \n                        borderBottomWidth:0,borderBottomColor:'#2F4F4F', padding:10, marginLeft:-10}}>MY ASSIGNED TASKS</Text>\n\n                        <TouchableOpacity onPress={()=>this.fcnMyPostModal(true)} style={{width:44, height:44, borderWidth:1, alignItems:'center',\n                                  justifyContent:'center',borderColor:'#09A6FF', borderRadius:22, marginRight:10}} >\n                    <Text style={{marginTop:0, fontSize:10, color:'#09A6FF'}}>New</Text>\n                  </TouchableOpacity>\n                </View>\n            </View>\n            <View style={styles.smallTop}>\n\n              <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnAssignedPosts(false)}>\n                <Text style={styles.textSmallTop}>Home</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={{padding:2, backgroundColor:'#20B2AA',borderWidth:1, borderColor:'#fff', borderRadius:20, marginTop:-12}} >\n                <Text style={{alignSelf:'center', color:'#FFF', fontWeight:'600', fontSize:14, padding:5, marginBottom:0, marginTop:0}}>Assigned</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnMyOwnPostsModal(true)}>\n                <Text style={styles.textSmallTop}>Created</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnMyPostModal(true)}>\n                <Text style={styles.textSmallTop}>New Task</Text>\n              </TouchableOpacity>\n\n            </View>\n\n            <View style={{flexDirection:'row', marginLeft:0, alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width}}>\n\n                <View\n                  style={{\n                      width: Dimensions.get(\"screen\").width/2,\n                      alignSelf:'center',\n                      marginTop: 2,\n                      marginBottom:5,\n                      borderColor: 'black',\n                      borderBottomWidth:1,\n                      borderRadius: 10\n                  }}>\n                  <Picker \n                    selectedValue={this.state.postStatus}\n                    value={this.state.postStatus}\n                    onValueChange={(itemValue,itemIndex) =>  this.fcnGetFilteredPostsByAssignedUser(itemValue, false) }\n                    style={{color:'#6f6fff', paddingTop:5, marginTop:1}}\n                    >\n                      <Picker.Item value='none' label='Status - no filter' />\n                      <Picker.Item key={3} value={3} label=\"ASSIGNED\"/>\n                      <Picker.Item key={6} value={6} label=\"DONE\"/>\n                      <Picker.Item key={4} value={4} label=\"CLOSED\"/>\n                      <Picker.Item key={5} value={5} label=\"CANCELLED\"/>\n                  </Picker>\n\n                </View>\n\n                <View\n                  style={{\n                      width: Dimensions.get(\"screen\").width/2,\n                      marginTop: 2,\n                      marginBottom:5,\n                      borderColor: 'black',\n                      borderBottomWidth:1,\n                      borderRadius: 10\n                  }}>\n                  <Picker \n                    selectedValue={this.state.postType} \n                    value={this.state.postType}\n                    onValueChange={(itemValue,itemIndex) => this.fcnGetFilteredPostsByAssignedUser(itemValue,true)}\n                    style={{color:'#6f6fff', paddingTop:5, marginTop:1}}\n                    >\n                      <Picker.Item value='' label='Type - no filter' />\n                      <Picker.Item key={0} value={0} label=\"DELIVERY\"/>\n                      <Picker.Item key={1} value={1} label=\"INSTALLATION\"/>\n                      <Picker.Item key={2} value={2} label=\"MANUAL SERVICES\"/>\n                      <Picker.Item key={3} value={3} label=\"OTHER\"/>\n                      <Picker.Item key={4} value={4} label=\"REMOVAL\"/>\n                  </Picker>\n\n                </View>\n\n              \n          </View>\n\n          {this.state.postsByUser.length > 0 ? \n              <FlatList\n              data={this.state.postsByUser}\n              keyExtractor={item => item.id.toString() }\n              renderItem={ ({item}) => <PostsByAssigned data={item} /> }\n              refreshing={this.state.loadMyPosts}\n              onRefresh={this.handleRefreshingForAssigned}\n              contentContainerStyle={{ paddingBottom: 200 }}\n              />\n          : \n              <View style={styles.botaoEmpty}>\n                <Text style={{color:'#2F3F4F', fontSize: 17, margin:3, padding:8}}>EMPTY</Text>\n              </View>\n          }\n          \n              \n          </Modal>\n\n\n\n\n\n{/* -------------------------------------------------------------------------------------------------------------------- */}\n\n\n\n          {/* VIEW - SMALL TOP MENU ON POSTS LIST SCREEN */}\n\n          <View style={{marginTop:10, alignSelf:'center', backgroundColor:'#2F4F4F' }}>\n            {/* <Text style={{color:'#000', fontSize:20, margin:5, fontWeight:'700', \n                      borderBottomWidth:0,borderBottomColor:'#09AFFF', padding:10}}>OLA TASK</Text> */}\n            <View style={{flexDirection:'row', alignItems:'center',justifyContent:'space-between', width:Dimensions.get(\"screen\").width, \n                          borderBottomWidth:1,borderColor:'#20B2AA', marginBottom:0, marginTop:14, padding:5, paddingBottom:5}}>\n              <TouchableOpacity onPress={()=>\n                  Alert.alert(\n                    'Stareng Technology',\n                    '\\nVisit our website:\\n\\n'+'www.starengtech.com\\n\\nDeveloped by:\\nThiago Trolle Cavalheiro',\n                    [{ text: 'OK'}],\n                    {cancelable: false},\n                  ) \n            } style={{width:44, height:44, borderWidth:1, alignItems:'center',\n                              justifyContent:'center',borderColor:'#fff', borderRadius:22, marginLeft:10}} >\n                <Text style={{marginTop:0, fontSize:8, color:'#fff'}}>Stareng</Text>\n              </TouchableOpacity>\n\n                <Text style={{color:'#fff', fontSize:21, margin:0, fontWeight:'700',borderBottomColor:'#20B2AA', padding:10, marginLeft:-10}}>\n                   OLA TASK\n                </Text>\n\n                <TouchableOpacity onPress={()=>this.fcnEntryModal(true)} style={{width:44, height:44, borderWidth:1, alignItems:'center',\n                                justifyContent:'center',borderColor:'#fff', borderRadius:22, marginRight:10}} >\n                    <Text style={{marginTop:0, fontSize:8, color:'#fff'}}>Logout</Text>\n                </TouchableOpacity>\n            </View>\n                <Text style={{ alignSelf:'center',color:'#fff', fontSize:12, margin:0,borderBottomColor:'#20B2AA', padding:10, marginLeft:-10}}>\n                    Welcome, {this.state.userName}.\n                </Text>\n          </View>\n          <View style={styles.smallTop}>\n\n            <TouchableOpacity style={{padding:2, backgroundColor:'#20B2AA',borderWidth:1, borderColor:'#fff', borderRadius:20, marginTop:-12}} >\n              <Text style={{alignSelf:'center', color:'#FFF', fontWeight:'600', fontSize:14, padding:5, marginBottom:0, marginTop:0}}>Home</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnAssignedPostsModal(true)}>\n              <Text style={styles.textSmallTop}>Assigned</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnMyOwnPostsModal(true)}>\n              <Text style={styles.textSmallTop}>Created</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnMyPostModal(true)}>\n              <Text style={styles.textSmallTop}>New Task</Text>\n            </TouchableOpacity>\n\n          </View>\n\n          {/* {this.showOptionsForMyTask ? \n            <View></View>\n          : \n            <View style={{alignSelf:'center', width:'%50', backgroundColor:'#2F4F4F', padding:10,  paddingTop:22,  flexDirection:'row',  justifyContent:'space-around', borderBottomLeftRadius:58,\n                           borderBottomRightRadius:58,  borderTopWidth:0.5,    borderTopColor:'#fff'}}>\n              <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnAssignedPostsModal(true)}>\n                <Text style={styles.textSmallTop}>Assigned</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={{padding:-10}} onPress={()=>this.fcnMyOwnPostsModal(true)}>\n                <Text style={styles.textSmallTop}>Created</Text>\n              </TouchableOpacity>\n            </View>\n          } */}\n\n          {/* <View style={{flexDirection:'row', marginLeft:0, alignItems:'center',justifyContent:'space-around', width:Dimensions.get(\"screen\").width}}> */}\n\n                {/* <View\n                  style={{\n                      width: Dimensions.get(\"screen\").width/2,\n                      alignSelf:'center',\n                      marginTop: 2,\n                      marginBottom:5,\n                      borderColor: 'black',\n                      borderBottomWidth:1,\n                      borderRadius: 10\n                  }}>\n                  <Picker \n                    selectedValue={this.state.postStatus}\n                    value={this.state.postStatus}\n                    onValueChange={(itemValue,itemIndex) =>  this.fcnGetPostByStatus(itemValue, false) }\n                    style={{color:'#20B2AA', paddingTop:5, marginTop:1}}\n                    >\n                      <Picker.Item value='' label='Status - no filter' />\n                      <Picker.Item key={2} value={2} label=\"OPEN\"/>\n                      <Picker.Item key={3} value={3} label=\"ASSIGNED\"/>\n                      <Picker.Item key={6} value={6} label=\"DONE\"/>\n                      <Picker.Item key={4} value={4} label=\"CLOSED\"/>\n                      <Picker.Item key={5} value={5} label=\"CANCELLED\"/>\n                  </Picker>\n\n                </View> */}\n\n                <View\n                  style={{\n                      width: Dimensions.get(\"screen\").width/1.4,\n                      alignSelf:'center',\n                      marginTop: 2,\n                      marginBottom:5,\n                      borderColor: 'black',\n                      borderBottomWidth:1,\n                      borderRadius: 10\n                  }}>\n                  <Picker \n                    selectedValue={this.state.postType} \n                    value={this.state.postType}\n                    onValueChange={(itemValue,itemIndex) => this.fcnGetPostByType(itemValue,false)}\n                    style={{color:'#20B2AA', paddingTop:5, marginTop:1}}\n                    >\n                      <Picker.Item value='' label='Type - no filter' />\n                      <Picker.Item key={0} value={0} label=\"DELIVERY\"/>\n                      <Picker.Item key={1} value={1} label=\"INSTALLATION\"/>\n                      <Picker.Item key={2} value={2} label=\"MANUAL SERVICES\"/>\n                      <Picker.Item key={3} value={3} label=\"OTHER\"/>\n                      <Picker.Item key={4} value={4} label=\"REMOVAL\"/>\n                  </Picker>\n\n                </View>\n\n              \n          {/* </View> */}\n                         \n\n          {/* <ReversedFlatList */}\n          <FlatList\n          data={this.state.posts}\n          keyExtractor={item => item.id.toString() }\n          renderItem={ ({item}) => <Posts data={item} userId={this.state.userID}/> }\n          refreshing={this.state.loadMyPosts}\n          onRefresh={this.handleRefreshing}\n          contentContainerStyle={{ paddingBottom: 200 }}\n          />\n\n\n\n          {/* -------------------------------------------------------------------------------------------------------------------- */}\n\n\n\n\n\n          {/* LOADING ZONE - ALL LOADINGS */}\n\n          <Modal animationType='fade' transparent={true} visible={this.state.loadMyPosts} style={{flex:1, alignItems: 'center', justifyContent: 'center'}}>\n              <View style={{marginTop:200, alignSelf:'center', width:100, height:100, backgroundColor:'#FFf', borderWidth:1, borderColor:'#09A6FF', borderRadius:40}}>\n                <View style={{alignItems: 'center', justifyContent: 'center', flex:1}}>\n                  <ActivityIndicator color=\"#09A6FF\" size={30}/>\n                  <Text style={{color:'#09A6FF', fontSize:7}}>wait</Text>\n                </View>\n              </View>\n          </Modal>\n\n\n\n\n\n  \n    </View>\n      )\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container:{\n    flex:1,\n    paddingTop:30\n  },\n  card:{\n    shadowColor: '#000',\n    backgroundColor: '#FFF',\n    shadowOffset: {width:0, height: 1},\n    shadowOpacity: 0.8,\n    margin: 15,\n    shadowRadius: 6,\n    borderRadius: 5,\n    elevation: 4,\n  },\n  smallTop:{\n    backgroundColor:'#2F4F4F',\n    padding:5,\n    paddingTop:18,\n    paddingTop:5,\n    flexDirection:'row',\n    justifyContent:'space-around',\n    borderBottomLeftRadius:58,\n    borderBottomRightRadius:58,\n    borderTopWidth:0.5,\n    borderTopColor:'#fff'\n  },\n  smallTop2:{\n    paddingTop:2,\n    flexDirection:'row',\n    justifyContent:'space-around',\n    borderBottomWidth:1,\n    borderBottomColor:'#09AFFF'\n  },\n  entryModal:{\n    flex:1,\n    backgroundColor:'#2f3f4F',\n    justifyContent:'flex-start',\n    alignItems:'center'\n  },\n  myPostsModal:{\n    flex:1,\n    backgroundColor:'#FFF',\n    padding:10\n  },\n  inputsEntry:{\n    width:350,\n    height:50,\n    color:'#FFF',\n    borderWidth:1,\n    borderColor:'#FFF',\n    borderRadius:10,\n    margin:10,\n    fontSize:15,\n    padding:10\n  },\n  inputsNewLogin:{\n    width:350,\n    height:40,\n    color:'#FFF',\n    borderWidth:1,\n    borderColor:'#FFF',\n    borderRadius:10,\n    margin:5,\n    fontSize:15,\n    padding:10\n  },\n  inputsMyTasks:{\n    width:350,\n    height:50,\n    borderWidth:1,\n    borderColor:'#000',\n    color:'#6495ED',\n    borderRadius:10,\n    margin:10,\n    fontSize:15,\n    padding:10\n  },\n  inputsMyTasksMiddle:{\n    width:350,\n    height:80,\n    borderWidth:1,\n    borderColor:'#000',\n    color:'#6495ED',\n    borderRadius:10,\n    marginTop:-5,\n    fontSize:15,\n    padding:10,\n    alignContent:'flex-start',\n    justifyContent:'flex-start'\n  },\n  inputsMyTasksBigger:{\n    width:350,\n    height:110,\n    borderWidth:1,\n    borderColor:'#000',\n    color:'#6495ED',\n    borderRadius:10,\n    margin:10,\n    fontSize:15,\n    padding:10,\n    alignContent:'flex-start',\n    justifyContent:'flex-start'\n  },\n  textSmallTop:{\n    color:'#FFF', \n    fontWeight:'600',\n    fontSize:14,\n    padding:5,\n    paddingTop:15, \n    marginBottom:0,\n    marginTop:-5\n  },\n  textSmallTop2:{\n    color:'#09AFFF', \n    fontSize:15, \n    margin:5,\n    marginBottom:15,\n    padding:10,\n    paddingTop:10,\n    paddingBottom:5\n  },\n  textInput:{\n    textAlign:'center',\n    fontSize:25\n  },\n  botaoEntry:{\n      width:350,\n      height:60,\n      borderWidth:1,\n      borderColor:'#FFF',\n      marginTop:40,\n      marginBottom:10,\n      padding: 10,\n      borderRadius:10,\n      alignItems:'center',\n      justifyContent:'center'\n  \n    },\n    botaoTexto:{\n      textAlign: 'center',\n      fontSize:18,\n      color: '#FFF'\n    },\n    botaoMyPostBack:{\n      width:150,\n      borderWidth:1,\n      borderColor:'#FF2f28',\n      //marginTop:25,\n      //marginBottom:10,\n      //padding: 8,\n      borderRadius:15,\n      alignItems:'center',\n      justifyContent:'center'\n  \n    },\n    botaoTextoMyPostBack:{\n      textAlign: 'center',\n      fontSize:14,\n      margin:1,\n      padding:10,\n      color: '#FF2f28'\n    },\n    botaoMyPostSave:{\n      width:300,\n      backgroundColor:'#09AFFF',\n      marginTop:30,\n      marginBottom:20,\n      padding: 8,\n      borderRadius:10,\n      alignItems:'center',\n      justifyContent:'center'\n  \n    },\n    botaoTextoMyPostSave:{\n      textAlign: 'center',\n      fontSize:14,\n      margin:2,\n      color: '#FFF'\n    },\n    botaoMyPostSaveTasks:{\n      //width:90,\n      backgroundColor:'#2F4F4F',\n      marginTop:-25,\n      marginBottom:35,\n      padding: 7,\n      borderRadius:26,\n      alignItems:'center',\n      justifyContent:'center'\n  \n    },\n    botaoTextoMyPostSaveTasks:{\n      textAlign: 'center',\n      fontSize:13,\n      margin:1,\n      color: '#FFF'\n    },\n    botaoAssign:{\n      width:150,\n      borderWidth:2,\n      borderColor:'#778899',\n      marginTop:0,\n      padding: 5,\n      alignItems:'center',\n      justifyContent:'center',\n      shadowColor: '#000',\n      backgroundColor: '#2F4F4F',\n      shadowOffset: {width:0, height: 1},\n      shadowOpacity: 1,\n      shadowRadius: 7,\n      borderRadius: 15,\n      elevation: 6,\n    },\n    botaoSubmit:{\n      width:280,\n      borderWidth:2,\n      borderColor:'#778899',\n      padding: 8,\n      marginTop: 30,\n      marginBottom: 60,\n      alignItems:'center',\n      justifyContent:'center',\n      shadowColor: '#000',\n      backgroundColor: '#2F4F4F',\n      shadowOffset: {width:0, height: 1},\n      shadowOpacity: 1,\n      shadowRadius: 7,\n      borderRadius: 15,\n      elevation: 6,\n    },\n    botaoAssigned:{\n      alignSelf:'center',\n      width:180,\n      borderWidth:2,\n      borderColor:'#778899',\n      marginTop:60,\n      padding: 0,\n      borderRadius:30,\n      alignItems:'center',\n      justifyContent:'center',\n      shadowColor: '#000',\n      backgroundColor: '#FFF',\n      shadowOffset: {width:0, height: 1},\n      shadowOpacity: 1,\n      shadowRadius: 7,\n      borderRadius: 10,\n      elevation: 6,\n    }\n    ,\n    botaoEmpty:{\n      alignSelf:'center',\n      width:190,\n      borderWidth:1,\n      borderColor:'#778899',\n      marginTop:60,\n      padding: 0,\n      borderRadius:40,\n      alignItems:'center',\n      justifyContent:'center',\n      backgroundColor: '#FFF',\n      borderRadius: 10\n    }\n});\n\nexport default App;"],"sourceRoot":""}